/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr
==========Starting Training=============
========================================
Use GPU: 0 for training, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='6010', dataset='pitts', scale='30k', tuple_size=1, test_batch_size=32, cache_size=1000, workers=1, height=480, width=640, neg_num=10, num_clusters=64, neg_pool=1000, arch='vgg16', layers='conv5', nowhiten=False, syncbn=True, sync_gather=True, features=4096, lr=0.0001, momentum=0.9, weight_decay=0.001, loss_type='sare_joint', step_size=5, resume='', vlad=True, eval_step=1, rerank=False, epochs=5, iters=0, seed=43, deterministic=False, print_freq=200, margin=0.1, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data/', logs_dir='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr', init_dir='/home/leo/usman_ws/datasets/openibl-init', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
No. of Clusters:  64
Loading centroids from /home/leo/usman_ws/datasets/openibl-init/vgg16_pitts_64_desc_cen.hdf5
===> Loading segmentation model
Encoder loaded!
Test the initial model:
Extract Features: [100/551]	Time 0.583 (0.622)	Data 0.000 (0.010)	
Extract Features: [200/551]	Time 0.586 (0.604)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.589 (0.598)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.590 (0.595)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.587 (0.594)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          79.3%
  top-5          92.3%
  top-10         95.1%
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.579 (0.595)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.588 (0.591)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.590 (0.589)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.588 (0.589)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.589 (0.588)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-0][200/1000]	Time 0.414 (0.412)	Data 0.021 (0.018)	Loss 1.351 (1.146)
Epoch: [0-0][400/1000]	Time 0.408 (0.410)	Data 0.013 (0.016)	Loss 0.158 (1.097)
Epoch: [0-0][600/1000]	Time 0.408 (0.409)	Data 0.015 (0.015)	Loss 1.832 (1.059)
Epoch: [0-0][800/1000]	Time 0.407 (0.408)	Data 0.013 (0.015)	Loss 0.660 (1.034)
Epoch: [0-0][1000/1000]	Time 0.398 (0.408)	Data 0.007 (0.014)	Loss 0.021 (0.996)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.571 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.572 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.575 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-1][200/1000]	Time 0.408 (0.411)	Data 0.015 (0.018)	Loss 0.025 (0.866)
Epoch: [0-1][400/1000]	Time 0.409 (0.409)	Data 0.011 (0.015)	Loss 2.287 (0.797)
Epoch: [0-1][600/1000]	Time 0.410 (0.408)	Data 0.012 (0.014)	Loss 0.021 (0.751)
Epoch: [0-1][800/1000]	Time 0.402 (0.407)	Data 0.012 (0.014)	Loss 0.039 (0.744)
Epoch: [0-1][1000/1000]	Time 0.400 (0.407)	Data 0.007 (0.014)	Loss 1.021 (0.731)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.581)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.574 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.566 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.578 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-2][200/1000]	Time 0.410 (0.411)	Data 0.012 (0.018)	Loss 0.292 (0.699)
Epoch: [0-2][400/1000]	Time 0.405 (0.409)	Data 0.010 (0.015)	Loss 1.541 (0.726)
Epoch: [0-2][600/1000]	Time 0.406 (0.408)	Data 0.012 (0.014)	Loss 0.040 (0.709)
Epoch: [0-2][800/1000]	Time 0.403 (0.408)	Data 0.014 (0.014)	Loss 0.629 (0.694)
Epoch: [0-2][1000/1000]	Time 0.397 (0.407)	Data 0.007 (0.014)	Loss 0.072 (0.687)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.572 (0.581)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.568 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.577 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.577 (0.575)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.576 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-3][200/1000]	Time 0.407 (0.412)	Data 0.013 (0.018)	Loss 0.167 (0.623)
Epoch: [0-3][400/1000]	Time 0.407 (0.410)	Data 0.012 (0.015)	Loss 0.969 (0.625)
Epoch: [0-3][600/1000]	Time 0.405 (0.409)	Data 0.011 (0.014)	Loss 0.141 (0.650)
Epoch: [0-3][800/1000]	Time 0.410 (0.408)	Data 0.011 (0.014)	Loss 0.244 (0.610)
Epoch: [0-3][1000/1000]	Time 0.399 (0.408)	Data 0.007 (0.014)	Loss 0.031 (0.596)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.571 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.572 (0.575)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.570 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.573 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-4][200/1000]	Time 0.408 (0.412)	Data 0.012 (0.018)	Loss 0.084 (0.515)
Epoch: [0-4][400/1000]	Time 0.400 (0.409)	Data 0.011 (0.015)	Loss 0.015 (0.503)
Epoch: [0-4][600/1000]	Time 0.411 (0.408)	Data 0.015 (0.014)	Loss 1.055 (0.506)
Epoch: [0-4][800/1000]	Time 0.405 (0.408)	Data 0.011 (0.014)	Loss 0.069 (0.501)
Epoch: [0-4][1000/1000]	Time 0.399 (0.408)	Data 0.007 (0.014)	Loss 1.197 (0.500)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.571 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.578 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.576 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.571 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-5][200/1000]	Time 0.404 (0.411)	Data 0.011 (0.018)	Loss 0.394 (0.514)
Epoch: [0-5][400/1000]	Time 0.403 (0.409)	Data 0.012 (0.015)	Loss 0.729 (0.518)
Epoch: [0-5][600/1000]	Time 0.409 (0.408)	Data 0.016 (0.014)	Loss 0.381 (0.532)
Epoch: [0-5][800/1000]	Time 0.402 (0.408)	Data 0.012 (0.014)	Loss 0.916 (0.533)
Epoch: [0-5][1000/1000]	Time 0.396 (0.407)	Data 0.007 (0.014)	Loss 0.510 (0.521)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.569 (0.580)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.575 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.573 (0.575)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.572 (0.574)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.570 (0.573)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-6][200/1000]	Time 0.405 (0.411)	Data 0.011 (0.018)	Loss 1.562 (0.435)
Epoch: [0-6][400/1000]	Time 0.401 (0.408)	Data 0.012 (0.015)	Loss 0.005 (0.450)
Epoch: [0-6][600/1000]	Time 0.407 (0.408)	Data 0.011 (0.014)	Loss 0.130 (0.451)
Epoch: [0-6][800/1000]	Time 0.409 (0.407)	Data 0.011 (0.014)	Loss 1.343 (0.458)
Epoch: [0-6][1000/1000]	Time 0.401 (0.407)	Data 0.008 (0.014)	Loss 0.115 (0.456)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.584 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.572 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.579 (0.575)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.576 (0.574)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-7][200/320]	Time 0.411 (0.411)	Data 0.016 (0.018)	Loss 0.198 (0.449)
Extract Features: [100/551]	Time 0.573 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/551]	Time 0.576 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.579 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.578 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.575 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.8%
  top-5          94.8%
  top-10         96.8%

 * Finished epoch   0 recall@1: 86.8%  recall@5: 94.8%  recall@10: 96.8%  best@5: 94.8% *

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.585 (0.581)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.570 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.564 (0.575)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.567 (0.574)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.575 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-0][200/1000]	Time 0.403 (0.411)	Data 0.012 (0.018)	Loss 0.108 (0.445)
Epoch: [1-0][400/1000]	Time 0.404 (0.409)	Data 0.011 (0.015)	Loss 0.293 (0.424)
Epoch: [1-0][600/1000]	Time 0.407 (0.408)	Data 0.012 (0.014)	Loss 0.039 (0.437)
Epoch: [1-0][800/1000]	Time 0.404 (0.407)	Data 0.012 (0.014)	Loss 0.057 (0.435)
Epoch: [1-0][1000/1000]	Time 0.398 (0.407)	Data 0.007 (0.014)	Loss 0.016 (0.426)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.571 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.576 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.573 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.575 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.576 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-1][200/1000]	Time 0.409 (0.411)	Data 0.012 (0.018)	Loss 0.008 (0.451)
Epoch: [1-1][400/1000]	Time 0.408 (0.409)	Data 0.014 (0.015)	Loss 0.265 (0.421)
Epoch: [1-1][600/1000]	Time 0.402 (0.408)	Data 0.011 (0.014)	Loss 0.009 (0.416)
Epoch: [1-1][800/1000]	Time 0.410 (0.408)	Data 0.012 (0.014)	Loss 0.018 (0.414)
Epoch: [1-1][1000/1000]	Time 0.402 (0.407)	Data 0.007 (0.014)	Loss 0.190 (0.403)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.568 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.576 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.567 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.572 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.577 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-2][200/1000]	Time 0.412 (0.411)	Data 0.016 (0.018)	Loss 0.542 (0.501)
Epoch: [1-2][400/1000]	Time 0.410 (0.409)	Data 0.016 (0.015)	Loss 0.677 (0.442)
Epoch: [1-2][600/1000]	Time 0.406 (0.408)	Data 0.011 (0.014)	Loss 0.013 (0.418)
Epoch: [1-2][800/1000]	Time 0.413 (0.408)	Data 0.014 (0.014)	Loss 1.472 (0.403)
Epoch: [1-2][1000/1000]	Time 0.396 (0.407)	Data 0.008 (0.014)	Loss 0.022 (0.400)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.568 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.575 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.573 (0.576)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.574 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-3][200/1000]	Time 0.405 (0.411)	Data 0.012 (0.018)	Loss 0.010 (0.431)
Epoch: [1-3][400/1000]	Time 0.405 (0.409)	Data 0.011 (0.015)	Loss 0.017 (0.441)
Epoch: [1-3][600/1000]	Time 0.408 (0.408)	Data 0.016 (0.014)	Loss 0.008 (0.420)
Epoch: [1-3][800/1000]	Time 0.401 (0.408)	Data 0.012 (0.014)	Loss 1.210 (0.420)
Epoch: [1-3][1000/1000]	Time 0.401 (0.408)	Data 0.007 (0.014)	Loss 0.137 (0.403)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.570 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.575 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.571 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.572 (0.575)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.576 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-4][200/1000]	Time 0.411 (0.411)	Data 0.012 (0.018)	Loss 0.083 (0.350)
Epoch: [1-4][400/1000]	Time 0.407 (0.409)	Data 0.012 (0.015)	Loss 1.174 (0.372)
Epoch: [1-4][600/1000]	Time 0.408 (0.408)	Data 0.011 (0.014)	Loss 0.108 (0.370)
Epoch: [1-4][800/1000]	Time 0.406 (0.408)	Data 0.012 (0.014)	Loss 0.286 (0.360)
Epoch: [1-4][1000/1000]	Time 0.403 (0.408)	Data 0.006 (0.014)	Loss 0.704 (0.349)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.575 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.573 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.574 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.573 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.573 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-5][200/1000]	Time 0.410 (0.411)	Data 0.013 (0.018)	Loss 0.025 (0.410)
Epoch: [1-5][400/1000]	Time 0.405 (0.409)	Data 0.011 (0.015)	Loss 0.089 (0.331)
Epoch: [1-5][600/1000]	Time 0.404 (0.409)	Data 0.011 (0.014)	Loss 0.072 (0.345)
Epoch: [1-5][800/1000]	Time 0.406 (0.408)	Data 0.013 (0.014)	Loss 0.086 (0.357)
Epoch: [1-5][1000/1000]	Time 0.392 (0.408)	Data 0.007 (0.014)	Loss 0.013 (0.373)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.569 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.570 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.573 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.568 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-6][200/1000]	Time 0.400 (0.412)	Data 0.011 (0.017)	Loss 1.027 (0.327)
Epoch: [1-6][400/1000]	Time 0.400 (0.409)	Data 0.011 (0.015)	Loss 0.317 (0.354)
Epoch: [1-6][600/1000]	Time 0.403 (0.408)	Data 0.012 (0.014)	Loss 0.303 (0.365)
Epoch: [1-6][800/1000]	Time 0.402 (0.408)	Data 0.012 (0.014)	Loss 0.014 (0.354)
Epoch: [1-6][1000/1000]	Time 0.400 (0.408)	Data 0.008 (0.014)	Loss 0.468 (0.351)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.569 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.563 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.568 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.572 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-7][200/320]	Time 0.409 (0.411)	Data 0.013 (0.018)	Loss 0.007 (0.319)
Extract Features: [100/551]	Time 0.572 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/551]	Time 0.575 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.578 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.575 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.572 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.8%
  top-5          95.6%
  top-10         97.2%

 * Finished epoch   1 recall@1: 86.8%  recall@5: 95.6%  recall@10: 97.2%  best@5: 95.6% *

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.568 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.573 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.573 (0.575)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.571 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-0][200/1000]	Time 0.404 (0.411)	Data 0.012 (0.018)	Loss 0.019 (0.297)
Epoch: [2-0][400/1000]	Time 0.410 (0.408)	Data 0.012 (0.015)	Loss 0.032 (0.290)
Epoch: [2-0][600/1000]	Time 0.404 (0.408)	Data 0.012 (0.014)	Loss 0.015 (0.281)
Epoch: [2-0][800/1000]	Time 0.410 (0.407)	Data 0.012 (0.014)	Loss 0.509 (0.286)
Epoch: [2-0][1000/1000]	Time 0.398 (0.407)	Data 0.007 (0.014)	Loss 0.454 (0.280)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.566 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.575 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.578 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.578 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-1][200/1000]	Time 0.411 (0.411)	Data 0.016 (0.018)	Loss 1.714 (0.261)
Epoch: [2-1][400/1000]	Time 0.406 (0.409)	Data 0.012 (0.015)	Loss 0.034 (0.268)
Epoch: [2-1][600/1000]	Time 0.410 (0.408)	Data 0.012 (0.014)	Loss 0.963 (0.308)
Epoch: [2-1][800/1000]	Time 0.411 (0.408)	Data 0.013 (0.014)	Loss 0.016 (0.302)
Epoch: [2-1][1000/1000]	Time 0.399 (0.407)	Data 0.007 (0.014)	Loss 0.026 (0.303)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.568 (0.581)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.574 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.576 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.572 (0.575)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.571 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-2][200/1000]	Time 0.408 (0.412)	Data 0.011 (0.018)	Loss 0.096 (0.337)
Epoch: [2-2][400/1000]	Time 0.407 (0.409)	Data 0.012 (0.015)	Loss 1.005 (0.317)
Epoch: [2-2][600/1000]	Time 0.406 (0.408)	Data 0.012 (0.014)	Loss 0.546 (0.301)
Epoch: [2-2][800/1000]	Time 0.407 (0.408)	Data 0.014 (0.014)	Loss 0.125 (0.302)
Epoch: [2-2][1000/1000]	Time 0.396 (0.407)	Data 0.007 (0.014)	Loss 0.101 (0.307)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.572 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.571 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.576 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-3][200/1000]	Time 0.410 (0.411)	Data 0.012 (0.018)	Loss 0.739 (0.321)
Epoch: [2-3][400/1000]	Time 0.407 (0.409)	Data 0.010 (0.015)	Loss 0.008 (0.300)
Epoch: [2-3][600/1000]	Time 0.407 (0.408)	Data 0.014 (0.014)	Loss 0.557 (0.302)
Epoch: [2-3][800/1000]	Time 0.406 (0.408)	Data 0.013 (0.014)	Loss 0.015 (0.298)
Epoch: [2-3][1000/1000]	Time 0.399 (0.407)	Data 0.007 (0.014)	Loss 0.005 (0.301)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.577 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.569 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.577 (0.575)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.577 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-4][200/1000]	Time 0.403 (0.412)	Data 0.011 (0.018)	Loss 0.027 (0.396)
Epoch: [2-4][400/1000]	Time 0.401 (0.410)	Data 0.012 (0.015)	Loss 0.199 (0.314)
Epoch: [2-4][600/1000]	Time 0.412 (0.409)	Data 0.016 (0.014)	Loss 0.206 (0.306)
Epoch: [2-4][800/1000]	Time 0.410 (0.408)	Data 0.015 (0.014)	Loss 0.023 (0.292)
Epoch: [2-4][1000/1000]	Time 0.395 (0.408)	Data 0.007 (0.014)	Loss 0.286 (0.297)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.576 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.569 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.579 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.578 (0.576)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.575 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-5][200/1000]	Time 0.407 (0.411)	Data 0.015 (0.017)	Loss 0.053 (0.187)
Epoch: [2-5][400/1000]	Time 0.415 (0.409)	Data 0.014 (0.015)	Loss 0.367 (0.230)
Epoch: [2-5][600/1000]	Time 0.401 (0.408)	Data 0.012 (0.014)	Loss 0.019 (0.241)
Epoch: [2-5][800/1000]	Time 0.405 (0.407)	Data 0.012 (0.014)	Loss 0.025 (0.253)
Epoch: [2-5][1000/1000]	Time 0.395 (0.407)	Data 0.007 (0.014)	Loss 0.000 (0.264)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.574 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.574 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.580 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.570 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-6][200/1000]	Time 0.407 (0.411)	Data 0.016 (0.018)	Loss 0.048 (0.274)
Epoch: [2-6][400/1000]	Time 0.410 (0.409)	Data 0.012 (0.015)	Loss 0.054 (0.263)
Epoch: [2-6][600/1000]	Time 0.423 (0.408)	Data 0.016 (0.014)	Loss 0.126 (0.265)
Epoch: [2-6][800/1000]	Time 0.400 (0.408)	Data 0.012 (0.014)	Loss 0.007 (0.266)
Epoch: [2-6][1000/1000]	Time 0.399 (0.407)	Data 0.008 (0.014)	Loss 0.135 (0.267)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.569 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.575 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.572 (0.576)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.577 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-7][200/320]	Time 0.407 (0.411)	Data 0.011 (0.018)	Loss 0.061 (0.245)
Extract Features: [100/551]	Time 0.572 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/551]	Time 0.572 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.568 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.570 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.577 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.8%
  top-5          94.8%
  top-10         96.9%

 * Finished epoch   2 recall@1: 86.8%  recall@5: 94.8%  recall@10: 96.9%  best@5: 95.6%

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.569 (0.581)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.574 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.577 (0.575)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.576 (0.574)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.571 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-0][200/1000]	Time 0.401 (0.411)	Data 0.012 (0.018)	Loss 0.453 (0.214)
Epoch: [3-0][400/1000]	Time 0.400 (0.409)	Data 0.011 (0.015)	Loss 0.307 (0.208)
Epoch: [3-0][600/1000]	Time 0.405 (0.408)	Data 0.013 (0.014)	Loss 0.007 (0.214)
Epoch: [3-0][800/1000]	Time 0.408 (0.407)	Data 0.014 (0.014)	Loss 0.031 (0.212)
Epoch: [3-0][1000/1000]	Time 0.400 (0.407)	Data 0.006 (0.014)	Loss 0.007 (0.210)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.575 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.570 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.573 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.577 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.572 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-1][200/1000]	Time 0.406 (0.412)	Data 0.013 (0.018)	Loss 1.665 (0.195)
Epoch: [3-1][400/1000]	Time 0.418 (0.409)	Data 0.018 (0.015)	Loss 0.043 (0.235)
Epoch: [3-1][600/1000]	Time 0.405 (0.408)	Data 0.013 (0.014)	Loss 0.022 (0.238)
Epoch: [3-1][800/1000]	Time 0.408 (0.407)	Data 0.013 (0.014)	Loss 0.025 (0.217)
Epoch: [3-1][1000/1000]	Time 0.401 (0.407)	Data 0.007 (0.014)	Loss 0.359 (0.210)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.566 (0.581)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.565 (0.576)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.578 (0.575)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.576 (0.574)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-2][200/1000]	Time 0.401 (0.411)	Data 0.012 (0.018)	Loss 0.143 (0.235)
Epoch: [3-2][400/1000]	Time 0.405 (0.408)	Data 0.012 (0.015)	Loss 0.218 (0.209)
Epoch: [3-2][600/1000]	Time 0.411 (0.408)	Data 0.016 (0.014)	Loss 0.076 (0.214)
Epoch: [3-2][800/1000]	Time 0.407 (0.408)	Data 0.011 (0.014)	Loss 0.193 (0.224)
Epoch: [3-2][1000/1000]	Time 0.401 (0.407)	Data 0.007 (0.014)	Loss 0.089 (0.221)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.569 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.573 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.571 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.569 (0.574)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-3][200/1000]	Time 0.406 (0.412)	Data 0.011 (0.018)	Loss 0.062 (0.229)
Epoch: [3-3][400/1000]	Time 0.414 (0.409)	Data 0.015 (0.015)	Loss 0.425 (0.207)
Epoch: [3-3][600/1000]	Time 0.414 (0.408)	Data 0.016 (0.014)	Loss 0.010 (0.203)
Epoch: [3-3][800/1000]	Time 0.401 (0.408)	Data 0.012 (0.014)	Loss 0.001 (0.199)
Epoch: [3-3][1000/1000]	Time 0.398 (0.407)	Data 0.007 (0.014)	Loss 0.004 (0.198)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.570 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.570 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.567 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.580 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-4][200/1000]	Time 0.411 (0.411)	Data 0.016 (0.018)	Loss 1.223 (0.248)
Epoch: [3-4][400/1000]	Time 0.410 (0.409)	Data 0.012 (0.015)	Loss 0.168 (0.228)
Epoch: [3-4][600/1000]	Time 0.414 (0.408)	Data 0.018 (0.014)	Loss 0.456 (0.213)
Epoch: [3-4][800/1000]	Time 0.408 (0.407)	Data 0.013 (0.014)	Loss 0.230 (0.220)
Epoch: [3-4][1000/1000]	Time 0.401 (0.407)	Data 0.007 (0.014)	Loss 0.081 (0.225)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.571 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.578 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.579 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.571 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-5][200/1000]	Time 0.412 (0.412)	Data 0.014 (0.018)	Loss 0.004 (0.263)
Epoch: [3-5][400/1000]	Time 0.409 (0.409)	Data 0.012 (0.015)	Loss 0.649 (0.225)
Epoch: [3-5][600/1000]	Time 0.410 (0.408)	Data 0.013 (0.014)	Loss 1.045 (0.234)
Epoch: [3-5][800/1000]	Time 0.410 (0.408)	Data 0.011 (0.014)	Loss 0.102 (0.225)
Epoch: [3-5][1000/1000]	Time 0.402 (0.408)	Data 0.006 (0.014)	Loss 0.442 (0.232)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.567 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.576 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.576 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.581 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.570 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-6][200/1000]	Time 0.406 (0.412)	Data 0.011 (0.018)	Loss 0.608 (0.236)
Epoch: [3-6][400/1000]	Time 0.407 (0.410)	Data 0.011 (0.015)	Loss 0.048 (0.233)
Epoch: [3-6][600/1000]	Time 0.408 (0.409)	Data 0.011 (0.014)	Loss 0.031 (0.220)
Epoch: [3-6][800/1000]	Time 0.404 (0.408)	Data 0.012 (0.014)	Loss 0.170 (0.221)
Epoch: [3-6][1000/1000]	Time 0.400 (0.408)	Data 0.007 (0.014)	Loss 0.065 (0.219)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.570 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.578 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.577 (0.576)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.572 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-7][200/320]	Time 0.404 (0.412)	Data 0.011 (0.018)	Loss 0.377 (0.251)
Extract Features: [100/551]	Time 0.575 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/551]	Time 0.567 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.575 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.571 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.574 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.1%
  top-5          94.4%
  top-10         96.6%

 * Finished epoch   3 recall@1: 86.1%  recall@5: 94.4%  recall@10: 96.6%  best@5: 95.6%

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.575 (0.581)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.575 (0.577)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.573 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.577 (0.576)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.571 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-0][200/1000]	Time 0.411 (0.411)	Data 0.015 (0.018)	Loss 0.023 (0.150)
Epoch: [4-0][400/1000]	Time 0.405 (0.409)	Data 0.010 (0.015)	Loss 0.180 (0.144)
Epoch: [4-0][600/1000]	Time 0.410 (0.408)	Data 0.014 (0.014)	Loss 0.012 (0.144)
Epoch: [4-0][800/1000]	Time 0.406 (0.408)	Data 0.012 (0.014)	Loss 0.212 (0.154)
Epoch: [4-0][1000/1000]	Time 0.400 (0.407)	Data 0.006 (0.014)	Loss 0.017 (0.154)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.575 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.566 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.581 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.576 (0.576)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.572 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-1][200/1000]	Time 0.407 (0.411)	Data 0.011 (0.018)	Loss 0.000 (0.177)
Epoch: [4-1][400/1000]	Time 0.408 (0.409)	Data 0.012 (0.015)	Loss 0.014 (0.184)
Epoch: [4-1][600/1000]	Time 0.407 (0.408)	Data 0.013 (0.014)	Loss 0.064 (0.189)
Epoch: [4-1][800/1000]	Time 0.409 (0.408)	Data 0.011 (0.014)	Loss 0.076 (0.199)
Epoch: [4-1][1000/1000]	Time 0.400 (0.407)	Data 0.007 (0.014)	Loss 0.019 (0.195)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.570 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.571 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.573 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.577 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-2][200/1000]	Time 0.405 (0.412)	Data 0.011 (0.018)	Loss 0.008 (0.138)
Epoch: [4-2][400/1000]	Time 0.410 (0.409)	Data 0.012 (0.015)	Loss 0.018 (0.136)
Epoch: [4-2][600/1000]	Time 0.409 (0.409)	Data 0.016 (0.014)	Loss 0.090 (0.148)
Epoch: [4-2][800/1000]	Time 0.409 (0.408)	Data 0.011 (0.014)	Loss 0.001 (0.154)
Epoch: [4-2][1000/1000]	Time 0.400 (0.408)	Data 0.007 (0.014)	Loss 0.228 (0.164)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.565 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.570 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.569 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.578 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.572 (0.575)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-3][200/1000]	Time 0.408 (0.412)	Data 0.011 (0.018)	Loss 0.162 (0.162)
Epoch: [4-3][400/1000]	Time 0.408 (0.409)	Data 0.013 (0.015)	Loss 0.667 (0.157)
Epoch: [4-3][600/1000]	Time 0.410 (0.408)	Data 0.018 (0.014)	Loss 0.223 (0.157)
Epoch: [4-3][800/1000]	Time 0.406 (0.407)	Data 0.011 (0.014)	Loss 0.070 (0.162)
Epoch: [4-3][1000/1000]	Time 0.397 (0.407)	Data 0.006 (0.014)	Loss 0.009 (0.155)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.578 (0.583)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.577 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.570 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.575 (0.576)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.571 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-4][200/1000]	Time 0.406 (0.412)	Data 0.012 (0.018)	Loss 0.077 (0.125)
Epoch: [4-4][400/1000]	Time 0.407 (0.409)	Data 0.014 (0.015)	Loss 0.094 (0.140)
Epoch: [4-4][600/1000]	Time 0.406 (0.408)	Data 0.012 (0.014)	Loss 0.028 (0.144)
Epoch: [4-4][800/1000]	Time 0.404 (0.408)	Data 0.012 (0.014)	Loss 0.026 (0.143)
Epoch: [4-4][1000/1000]	Time 0.400 (0.408)	Data 0.007 (0.014)	Loss 0.011 (0.142)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.573 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.568 (0.580)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.575 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.576 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.571 (0.577)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-5][200/1000]	Time 0.409 (0.412)	Data 0.012 (0.018)	Loss 0.224 (0.152)
Epoch: [4-5][400/1000]	Time 0.404 (0.410)	Data 0.012 (0.015)	Loss 0.109 (0.161)
Epoch: [4-5][600/1000]	Time 0.408 (0.409)	Data 0.011 (0.014)	Loss 0.147 (0.169)
Epoch: [4-5][800/1000]	Time 0.402 (0.408)	Data 0.010 (0.014)	Loss 0.147 (0.163)
Epoch: [4-5][1000/1000]	Time 0.394 (0.408)	Data 0.007 (0.014)	Loss 1.042 (0.163)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.569 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.578 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.581 (0.577)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.572 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.575 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-6][200/1000]	Time 0.408 (0.411)	Data 0.013 (0.018)	Loss 0.231 (0.162)
Epoch: [4-6][400/1000]	Time 0.407 (0.409)	Data 0.011 (0.015)	Loss 0.004 (0.148)
Epoch: [4-6][600/1000]	Time 0.407 (0.408)	Data 0.014 (0.014)	Loss 0.011 (0.146)
Epoch: [4-6][800/1000]	Time 0.407 (0.408)	Data 0.014 (0.014)	Loss 0.115 (0.143)
Epoch: [4-6][1000/1000]	Time 0.410 (0.408)	Data 0.007 (0.014)	Loss 0.021 (0.143)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.572 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.576 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.571 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.569 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.576 (0.577)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-7][200/320]	Time 0.405 (0.411)	Data 0.012 (0.018)	Loss 0.089 (0.163)
Extract Features: [100/551]	Time 0.573 (0.584)	Data 0.000 (0.010)	
Extract Features: [200/551]	Time 0.575 (0.579)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.576 (0.578)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.574 (0.577)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.568 (0.576)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.2%
  top-5          94.9%
  top-10         96.9%

 * Finished epoch   4 recall@1: 86.2%  recall@5: 94.9%  recall@10: 96.9%  best@5: 95.6%

Performing PCA reduction on the best model:
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar'
Extract Features: [100/542]	Time 0.573 (0.582)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.572 (0.578)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.568 (0.576)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.575 (0.575)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.569 (0.575)	Data 0.000 (0.002)	
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Testing on Pitts30k-test:
load PCA parameters...
Extract Features: [100/526]	Time 0.578 (0.587)	Data 0.000 (0.010)	
Extract Features: [200/526]	Time 0.580 (0.582)	Data 0.000 (0.005)	
Extract Features: [300/526]	Time 0.570 (0.580)	Data 0.000 (0.003)	
Extract Features: [400/526]	Time 0.584 (0.579)	Data 0.000 (0.003)	
Extract Features: [500/526]	Time 0.579 (0.579)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.6%
  top-5          94.5%
  top-10         96.0%
==========Testing=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint0.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint1.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint2.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint3.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint4.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar
==============================
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint0.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint0.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint0.pth.tar'
=> Start epoch 0  best recall5 94.8%
Extract Features: [100/542]	Time 0.549 (0.596)	Data 0.000 (0.017)	
Extract Features: [200/542]	Time 0.551 (0.574)	Data 0.000 (0.009)	
Extract Features: [300/542]	Time 0.549 (0.566)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.552 (0.563)	Data 0.000 (0.004)	
Extract Features: [500/542]	Time 0.551 (0.561)	Data 0.000 (0.004)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.546 (0.565)	Data 0.000 (0.019)	
Extract Features: [200/213]	Time 0.630 (0.580)	Data 0.000 (0.009)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.658 (0.689)	Data 0.000 (0.019)	
Extract Features: [200/313]	Time 0.629 (0.657)	Data 0.000 (0.010)	
Extract Features: [300/313]	Time 0.611 (0.647)	Data 0.000 (0.007)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.4%
  top-5          94.5%
  top-10         96.0%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint0.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint0.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint0.pth.tar'
=> Start epoch 0  best recall5 94.8%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.094 (0.102)	Data 0.052 (0.046)	
Extract Features: [200/315]	Time 0.075 (0.088)	Data 0.033 (0.039)	
Extract Features: [300/315]	Time 0.056 (0.091)	Data 0.000 (0.038)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.623 (0.697)	Data 0.000 (0.021)	
Extract Features: [200/2375]	Time 0.660 (0.675)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.619 (0.667)	Data 0.000 (0.007)	
Extract Features: [400/2375]	Time 0.605 (0.659)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.667 (0.654)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.602 (0.652)	Data 0.000 (0.004)	
Extract Features: [700/2375]	Time 0.581 (0.650)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.663 (0.649)	Data 0.000 (0.003)	
Extract Features: [900/2375]	Time 0.612 (0.648)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.637 (0.649)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.637 (0.648)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.664 (0.648)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.650 (0.646)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.621 (0.644)	Data 0.000 (0.002)	
Extract Features: [1500/2375]	Time 0.617 (0.643)	Data 0.000 (0.002)	
Extract Features: [1600/2375]	Time 0.587 (0.642)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.594 (0.641)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.602 (0.639)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.616 (0.639)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.645 (0.639)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.598 (0.639)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.586 (0.638)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.593 (0.636)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          81.3%
  top-5          88.9%
  top-10         91.1%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint1.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint1.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint1.pth.tar'
=> Start epoch 1  best recall5 95.6%
Extract Features: [100/542]	Time 0.626 (0.675)	Data 0.000 (0.017)	
Extract Features: [200/542]	Time 0.631 (0.659)	Data 0.000 (0.009)	
Extract Features: [300/542]	Time 0.652 (0.655)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.594 (0.652)	Data 0.000 (0.004)	
Extract Features: [500/542]	Time 0.653 (0.651)	Data 0.000 (0.004)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.626 (0.648)	Data 0.000 (0.019)	
Extract Features: [200/213]	Time 0.671 (0.655)	Data 0.000 (0.010)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.586 (0.624)	Data 0.000 (0.019)	
Extract Features: [200/313]	Time 0.620 (0.625)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.622 (0.626)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.5%
  top-5          94.7%
  top-10         95.9%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint1.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint1.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint1.pth.tar'
=> Start epoch 1  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.070 (0.101)	Data 0.028 (0.045)	
Extract Features: [200/315]	Time 0.078 (0.088)	Data 0.033 (0.038)	
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint2.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint2.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint2.pth.tar'
=> Start epoch 2  best recall5 95.6%
Extract Features: [100/542]	Time 0.599 (0.671)	Data 0.000 (0.018)	
Extract Features: [200/542]	Time 0.628 (0.646)	Data 0.000 (0.009)	
Extract Features: [300/542]	Time 0.634 (0.639)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.637 (0.637)	Data 0.000 (0.005)	
Extract Features: [500/542]	Time 0.604 (0.636)	Data 0.000 (0.004)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.617 (0.657)	Data 0.000 (0.019)	
Extract Features: [200/213]	Time 0.657 (0.642)	Data 0.000 (0.010)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.608 (0.652)	Data 0.000 (0.019)	
Extract Features: [200/313]	Time 0.668 (0.643)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.644 (0.642)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.5%
  top-5          94.8%
  top-10         96.1%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint2.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint2.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint2.pth.tar'
=> Start epoch 2  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.044 (0.102)	Data 0.000 (0.046)	
Extract Features: [200/315]	Time 0.078 (0.088)	Data 0.034 (0.039)	
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint3.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint3.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint3.pth.tar'
=> Start epoch 3  best recall5 95.6%
Extract Features: [100/542]	Time 0.602 (0.669)	Data 0.000 (0.018)	
Extract Features: [200/542]	Time 0.576 (0.642)	Data 0.000 (0.009)	
Extract Features: [300/542]	Time 0.603 (0.627)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.640 (0.625)	Data 0.000 (0.005)	
Extract Features: [500/542]	Time 0.635 (0.626)	Data 0.000 (0.004)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.615 (0.644)	Data 0.000 (0.020)	
Extract Features: [200/213]	Time 0.590 (0.626)	Data 0.000 (0.010)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.607 (0.606)	Data 0.000 (0.019)	
Extract Features: [200/313]	Time 0.620 (0.607)	Data 0.000 (0.010)	
Extract Features: [300/313]	Time 0.652 (0.603)	Data 0.000 (0.007)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.6%
  top-5          94.7%
  top-10         96.0%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint3.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint3.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint3.pth.tar'
=> Start epoch 3  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.066 (0.102)	Data 0.022 (0.044)	
Extract Features: [200/315]	Time 0.084 (0.088)	Data 0.039 (0.037)	
Extract Features: [300/315]	Time 0.053 (0.091)	Data 0.000 (0.037)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.687 (0.707)	Data 0.000 (0.020)	
Extract Features: [200/2375]	Time 0.670 (0.688)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.662 (0.683)	Data 0.000 (0.007)	
Extract Features: [400/2375]	Time 0.675 (0.680)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.683 (0.677)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.669 (0.677)	Data 0.000 (0.003)	
Extract Features: [700/2375]	Time 0.641 (0.678)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.688 (0.678)	Data 0.000 (0.003)	
Extract Features: [900/2375]	Time 0.687 (0.678)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.675 (0.679)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.689 (0.681)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.674 (0.681)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.640 (0.681)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.682 (0.680)	Data 0.000 (0.002)	
Extract Features: [1500/2375]	Time 0.711 (0.680)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.680 (0.680)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.676 (0.679)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.652 (0.678)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.668 (0.677)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.672 (0.677)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.656 (0.675)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.651 (0.675)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.661 (0.674)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          83.5%
  top-5          89.5%
  top-10         89.8%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint4.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint4.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint4.pth.tar'
=> Start epoch 4  best recall5 95.6%
Extract Features: [100/542]	Time 0.630 (0.698)	Data 0.000 (0.018)	
Extract Features: [200/542]	Time 0.628 (0.674)	Data 0.000 (0.009)	
Extract Features: [300/542]	Time 0.653 (0.667)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.641 (0.661)	Data 0.000 (0.005)	
Extract Features: [500/542]	Time 0.666 (0.659)	Data 0.000 (0.004)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.655 (0.675)	Data 0.000 (0.019)	
Extract Features: [200/213]	Time 0.671 (0.662)	Data 0.000 (0.010)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.651 (0.677)	Data 0.000 (0.019)	
Extract Features: [200/313]	Time 0.648 (0.667)	Data 0.000 (0.010)	
Extract Features: [300/313]	Time 0.651 (0.664)	Data 0.000 (0.007)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.5%
  top-5          94.4%
  top-10         95.9%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint4.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint4.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/checkpoint4.pth.tar'
=> Start epoch 4  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.042 (0.102)	Data 0.000 (0.046)	
Extract Features: [200/315]	Time 0.085 (0.089)	Data 0.041 (0.039)	
Extract Features: [300/315]	Time 0.053 (0.092)	Data 0.000 (0.038)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.672 (0.693)	Data 0.000 (0.021)	
Extract Features: [200/2375]	Time 0.620 (0.669)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.656 (0.661)	Data 0.000 (0.007)	
Extract Features: [400/2375]	Time 0.619 (0.658)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.662 (0.656)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.635 (0.654)	Data 0.000 (0.004)	
Extract Features: [700/2375]	Time 0.633 (0.653)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.634 (0.652)	Data 0.000 (0.003)	
Extract Features: [900/2375]	Time 0.653 (0.652)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.638 (0.651)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.649 (0.651)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.644 (0.651)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.645 (0.650)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.659 (0.650)	Data 0.000 (0.002)	
Extract Features: [1500/2375]	Time 0.652 (0.650)	Data 0.000 (0.002)	
Extract Features: [1600/2375]	Time 0.662 (0.650)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.651 (0.650)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.665 (0.649)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.643 (0.650)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.651 (0.650)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.680 (0.651)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.638 (0.651)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.703 (0.652)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          84.4%
  top-5          90.5%
  top-10         92.4%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar'
=> Start epoch 1  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.617 (0.684)	Data 0.000 (0.018)	
Extract Features: [200/213]	Time 0.609 (0.648)	Data 0.000 (0.009)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.648 (0.640)	Data 0.000 (0.018)	
Extract Features: [200/313]	Time 0.596 (0.627)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.627 (0.624)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.6%
  top-5          94.5%
  top-10         96.0%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-14-Apr/model_best.pth.tar'
=> Start epoch 1  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.150 (0.102)	Data 0.109 (0.047)	
Extract Features: [200/315]	Time 0.087 (0.088)	Data 0.045 (0.039)	
Extract Features: [300/315]	Time 0.051 (0.089)	Data 0.000 (0.039)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.629 (0.657)	Data 0.000 (0.020)	
Extract Features: [200/2375]	Time 0.622 (0.646)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.627 (0.639)	Data 0.000 (0.007)	
Extract Features: [400/2375]	Time 0.601 (0.633)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.644 (0.630)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.649 (0.634)	Data 0.000 (0.004)	
Extract Features: [700/2375]	Time 0.662 (0.637)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.645 (0.640)	Data 0.000 (0.003)	
Extract Features: [900/2375]	Time 0.654 (0.642)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.663 (0.644)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.663 (0.645)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.654 (0.647)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.660 (0.648)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.650 (0.648)	Data 0.000 (0.002)	
Extract Features: [1500/2375]	Time 0.662 (0.648)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.665 (0.647)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.665 (0.647)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.674 (0.648)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.661 (0.649)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.654 (0.650)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.734 (0.651)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.658 (0.652)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.678 (0.653)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          82.2%
  top-5          89.5%
  top-10         90.8%
