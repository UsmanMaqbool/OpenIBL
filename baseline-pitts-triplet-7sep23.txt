/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-triplet-lr0.0001-tuple1-25-Sep
==========Starting Training=============
========================================
Use GPU: 0 for training, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='6010', dataset='pitts', scale='30k', tuple_size=1, test_batch_size=32, cache_size=1000, workers=1, height=480, width=640, neg_num=10, num_clusters=64, neg_pool=1000, arch='vgg16', layers='conv5', nowhiten=False, syncbn=True, sync_gather=True, features=4096, lr=0.0001, momentum=0.9, weight_decay=0.001, loss_type='triplet', step_size=5, resume='', vlad=True, eval_step=1, rerank=False, epochs=5, iters=0, seed=43, deterministic=False, print_freq=200, margin=0.1, data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-triplet-lr0.0001-tuple1-25-Sep', init_dir='/home/leo/usman_ws/codes/OpenIBL/examples/../logs', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
7608
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   312  |     7416
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
2048
4096
2048
8192
2048
10000
4096
4096
4096
8192
4096
10000
6144
4096
6144
8192
6144
10000
7416
4096
7416
8192
7416
10000
dataset.q_val = 7608, dataset.db_val = 10000, dataset.val_pos = 7608
Loading centroids from /home/leo/usman_ws/codes/OpenIBL/examples/../logs/vgg16_pitts_64_desc_cen.hdf5
===> Start extracting features for sorting gallery
Extract Features: [100/1946]	Time 0.221 (0.228)	Data 0.000 (0.009)	
192
num_rows: 2048, num_cols 4096
start: 0, 0: 0, 0, 0, 0 
end: 2047, 4095: 0, 0, 2047, 4095 
Extract Features: [200/1946]	Time 0.214 (0.296)	Data 0.000 (0.005)	
Extract Features: [300/1946]	Time 0.218 (0.269)	Data 0.000 (0.003)	
384
num_rows: 2048, num_cols 4096
start: 0, 4096: 0, 4096, 0, 0 
end: 2047, 8191: 0, 4096, 2047, 4095 
Extract Features: [400/1946]	Time 0.218 (0.293)	Data 0.000 (0.002)	
Extract Features: [500/1946]	Time 0.202 (0.277)	Data 0.000 (0.002)	
576
num_rows: 2048, num_cols 4096
start: 0, 8192: 0, 8192, 0, 0 
we are here now
torch.Size([7416, 10000])
Update Position: 0, 10000: 0, 8192, 0, 1808 
After Update: 2048, 0 : 2048, -1808, 0, 1808 
end: 4095, 2287: 2048, -1808, 2047, 4095 
Extract Features: [600/1946]	Time 0.216 (0.291)	Data 0.000 (0.002)	
Extract Features: [700/1946]	Time 0.202 (0.280)	Data 0.000 (0.001)	
768
num_rows: 2048, num_cols 4096
start: 2048, 2288: 2048, 2288, 0, 0 
end: 4095, 6383: 2048, 2288, 2047, 4095 
Extract Features: [800/1946]	Time 0.204 (0.290)	Data 0.000 (0.001)	
Extract Features: [900/1946]	Time 0.219 (0.281)	Data 0.000 (0.001)	
960
num_rows: 2048, num_cols 4096
start: 2048, 6384: 2048, 6384, 0, 0 
we are here now
torch.Size([7416, 10000])
Update Position: 2048, 10000: 2048, 6384, 0, 3616 
After Update: 4096, 0 : 4096, -3616, 0, 3616 
end: 6143, 479: 4096, -3616, 2047, 4095 
Extract Features: [1000/1946]	Time 0.215 (0.290)	Data 0.000 (0.001)	
Extract Features: [1100/1946]	Time 0.219 (0.282)	Data 0.000 (0.001)	
1152
num_rows: 2048, num_cols 4096
start: 4096, 480: 4096, 480, 0, 0 
end: 6143, 4575: 4096, 480, 2047, 4095 
Extract Features: [1200/1946]	Time 0.222 (0.289)	Data 0.000 (0.001)	
Extract Features: [1300/1946]	Time 0.202 (0.283)	Data 0.000 (0.001)	
1344
num_rows: 2048, num_cols 4096
start: 4096, 4576: 4096, 4576, 0, 0 
end: 6143, 8671: 4096, 4576, 2047, 4095 
Extract Features: [1400/1946]	Time 0.203 (0.289)	Data 0.000 (0.001)	
Extract Features: [1500/1946]	Time 0.214 (0.284)	Data 0.000 (0.001)	
1536
num_rows: 2048, num_cols 4096
start: 4096, 8672: 4096, 8672, 0, 0 
we are here now
torch.Size([7416, 10000])
Update Position: 4096, 10000: 4096, 8672, 0, 1328 
After Update: 6144, 0 : 6144, -1328, 0, 1328 
