/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr
==========Starting Training=============
========================================
Use GPU: 0 for training, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='6010', dataset='pitts', scale='30k', tuple_size=1, test_batch_size=32, cache_size=1000, workers=1, height=480, width=640, neg_num=10, num_clusters=64, neg_pool=1000, arch='vgg16', layers='conv5', nowhiten=False, syncbn=True, sync_gather=True, features=4096, lr=0.0001, momentum=0.9, weight_decay=0.001, loss_type='sare_joint', step_size=5, resume='', vlad=True, eval_step=1, rerank=False, epochs=5, iters=0, seed=43, deterministic=False, print_freq=200, margin=0.1, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data/', logs_dir='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr', init_dir='/home/leo/usman_ws/datasets/openibl-init', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
No. of Clusters:  64
Loading centroids from /home/leo/usman_ws/datasets/openibl-init/vgg16_pitts_64_desc_cen.hdf5
===> Loading segmentation model
Encoder loaded!
Test the initial model:
Extract Features: [100/551]	Time 0.546 (0.553)	Data 0.000 (0.009)	
Extract Features: [200/551]	Time 0.535 (0.548)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.547 (0.546)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.536 (0.546)	Data 0.000 (0.002)	
Extract Features: [500/551]	Time 0.550 (0.547)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          79.3%
  top-5          92.3%
  top-10         95.1%
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.528 (0.555)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.551 (0.549)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.538 (0.547)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.538 (0.546)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.546 (0.545)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-0][200/1000]	Time 0.383 (0.391)	Data 0.021 (0.018)	Loss 1.378 (1.147)
Epoch: [0-0][400/1000]	Time 0.385 (0.387)	Data 0.014 (0.016)	Loss 0.149 (1.098)
Epoch: [0-0][600/1000]	Time 0.383 (0.385)	Data 0.016 (0.015)	Loss 1.622 (1.059)
Epoch: [0-0][800/1000]	Time 0.381 (0.384)	Data 0.014 (0.014)	Loss 0.730 (1.030)
Epoch: [0-0][1000/1000]	Time 0.371 (0.384)	Data 0.006 (0.014)	Loss 0.018 (0.991)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.522 (0.544)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.526 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.539 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.538 (0.536)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.524 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-1][200/1000]	Time 0.384 (0.387)	Data 0.013 (0.018)	Loss 0.030 (0.838)
Epoch: [0-1][400/1000]	Time 0.377 (0.384)	Data 0.011 (0.015)	Loss 2.309 (0.801)
Epoch: [0-1][600/1000]	Time 0.379 (0.384)	Data 0.012 (0.014)	Loss 0.067 (0.781)
Epoch: [0-1][800/1000]	Time 0.380 (0.383)	Data 0.011 (0.014)	Loss 0.021 (0.770)
Epoch: [0-1][1000/1000]	Time 0.371 (0.383)	Data 0.006 (0.013)	Loss 2.614 (0.758)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.525 (0.544)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.523 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.525 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.541 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.622 (0.539)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-2][200/1000]	Time 0.382 (0.386)	Data 0.012 (0.017)	Loss 0.262 (0.704)
Epoch: [0-2][400/1000]	Time 0.377 (0.384)	Data 0.011 (0.015)	Loss 1.759 (0.730)
Epoch: [0-2][600/1000]	Time 0.379 (0.383)	Data 0.012 (0.014)	Loss 0.199 (0.714)
Epoch: [0-2][800/1000]	Time 0.378 (0.382)	Data 0.014 (0.014)	Loss 0.328 (0.690)
Epoch: [0-2][1000/1000]	Time 0.376 (0.382)	Data 0.007 (0.013)	Loss 0.156 (0.669)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.532 (0.542)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.534 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.537 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.536 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.537 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-3][200/1000]	Time 0.382 (0.387)	Data 0.012 (0.018)	Loss 0.117 (0.655)
Epoch: [0-3][400/1000]	Time 0.379 (0.384)	Data 0.012 (0.015)	Loss 0.734 (0.648)
Epoch: [0-3][600/1000]	Time 0.377 (0.383)	Data 0.013 (0.014)	Loss 0.092 (0.660)
Epoch: [0-3][800/1000]	Time 0.379 (0.383)	Data 0.011 (0.014)	Loss 0.236 (0.608)
Epoch: [0-3][1000/1000]	Time 0.376 (0.382)	Data 0.007 (0.013)	Loss 0.029 (0.599)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.534 (0.544)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.529 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.536 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.529 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.537 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-4][200/1000]	Time 0.381 (0.386)	Data 0.012 (0.017)	Loss 0.053 (0.539)
Epoch: [0-4][400/1000]	Time 0.379 (0.383)	Data 0.011 (0.015)	Loss 0.003 (0.510)
Epoch: [0-4][600/1000]	Time 0.379 (0.382)	Data 0.014 (0.014)	Loss 1.144 (0.515)
Epoch: [0-4][800/1000]	Time 0.388 (0.382)	Data 0.011 (0.013)	Loss 0.006 (0.518)
Epoch: [0-4][1000/1000]	Time 0.375 (0.382)	Data 0.007 (0.013)	Loss 1.190 (0.514)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.532 (0.541)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.523 (0.538)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.536 (0.536)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.534 (0.536)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.563 (0.535)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-5][200/1000]	Time 0.377 (0.387)	Data 0.012 (0.017)	Loss 0.324 (0.472)
Epoch: [0-5][400/1000]	Time 0.376 (0.384)	Data 0.012 (0.015)	Loss 0.817 (0.492)
Epoch: [0-5][600/1000]	Time 0.381 (0.383)	Data 0.015 (0.014)	Loss 0.383 (0.514)
Epoch: [0-5][800/1000]	Time 0.374 (0.383)	Data 0.010 (0.014)	Loss 1.354 (0.513)
Epoch: [0-5][1000/1000]	Time 0.375 (0.382)	Data 0.006 (0.013)	Loss 0.752 (0.499)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.580 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.535 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.540 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.539 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.539 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-6][200/1000]	Time 0.378 (0.386)	Data 0.013 (0.017)	Loss 1.612 (0.409)
Epoch: [0-6][400/1000]	Time 0.381 (0.384)	Data 0.012 (0.015)	Loss 0.005 (0.438)
Epoch: [0-6][600/1000]	Time 0.376 (0.383)	Data 0.012 (0.014)	Loss 0.239 (0.449)
Epoch: [0-6][800/1000]	Time 0.384 (0.383)	Data 0.011 (0.014)	Loss 1.065 (0.452)
Epoch: [0-6][1000/1000]	Time 0.372 (0.382)	Data 0.006 (0.013)	Loss 0.267 (0.451)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.535 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.532 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.540 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.527 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.534 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-7][200/320]	Time 0.377 (0.387)	Data 0.012 (0.017)	Loss 0.079 (0.446)
Extract Features: [100/551]	Time 0.534 (0.546)	Data 0.000 (0.009)	
Extract Features: [200/551]	Time 0.526 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.531 (0.539)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.539 (0.539)	Data 0.000 (0.002)	
Extract Features: [500/551]	Time 0.566 (0.538)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          87.3%
  top-5          95.1%
  top-10         96.9%

 * Finished epoch   0 recall@1: 87.3%  recall@5: 95.1%  recall@10: 96.9%  best@5: 95.1% *

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.524 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.595 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.523 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.537 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.534 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-0][200/1000]	Time 0.380 (0.386)	Data 0.013 (0.017)	Loss 0.188 (0.478)
Epoch: [1-0][400/1000]	Time 0.382 (0.383)	Data 0.012 (0.015)	Loss 0.713 (0.455)
Epoch: [1-0][600/1000]	Time 0.382 (0.383)	Data 0.012 (0.014)	Loss 0.022 (0.468)
Epoch: [1-0][800/1000]	Time 0.375 (0.382)	Data 0.011 (0.014)	Loss 0.063 (0.468)
Epoch: [1-0][1000/1000]	Time 0.371 (0.382)	Data 0.007 (0.013)	Loss 0.017 (0.451)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.537 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.534 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.525 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.540 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.536 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-1][200/1000]	Time 0.447 (0.386)	Data 0.012 (0.018)	Loss 0.011 (0.475)
Epoch: [1-1][400/1000]	Time 0.378 (0.384)	Data 0.013 (0.015)	Loss 0.658 (0.430)
Epoch: [1-1][600/1000]	Time 0.381 (0.383)	Data 0.012 (0.014)	Loss 0.054 (0.446)
Epoch: [1-1][800/1000]	Time 0.376 (0.383)	Data 0.012 (0.014)	Loss 0.062 (0.442)
Epoch: [1-1][1000/1000]	Time 0.375 (0.382)	Data 0.006 (0.013)	Loss 0.458 (0.418)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.524 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.536 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.524 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.528 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.526 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-2][200/1000]	Time 0.385 (0.387)	Data 0.015 (0.018)	Loss 0.340 (0.483)
Epoch: [1-2][400/1000]	Time 0.379 (0.384)	Data 0.015 (0.015)	Loss 1.078 (0.445)
Epoch: [1-2][600/1000]	Time 0.378 (0.383)	Data 0.011 (0.014)	Loss 0.038 (0.435)
Epoch: [1-2][800/1000]	Time 0.382 (0.383)	Data 0.012 (0.014)	Loss 0.279 (0.429)
Epoch: [1-2][1000/1000]	Time 0.377 (0.383)	Data 0.008 (0.013)	Loss 0.024 (0.424)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.531 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.526 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.539 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.541 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.525 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-3][200/1000]	Time 0.376 (0.386)	Data 0.011 (0.017)	Loss 0.006 (0.411)
Epoch: [1-3][400/1000]	Time 0.380 (0.384)	Data 0.012 (0.015)	Loss 0.045 (0.429)
Epoch: [1-3][600/1000]	Time 0.384 (0.383)	Data 0.016 (0.014)	Loss 0.009 (0.414)
Epoch: [1-3][800/1000]	Time 0.383 (0.382)	Data 0.012 (0.014)	Loss 0.544 (0.422)
Epoch: [1-3][1000/1000]	Time 0.374 (0.382)	Data 0.007 (0.013)	Loss 0.209 (0.410)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.535 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.535 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.538 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.528 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.537 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-4][200/1000]	Time 0.381 (0.387)	Data 0.012 (0.018)	Loss 0.112 (0.404)
Epoch: [1-4][400/1000]	Time 0.379 (0.384)	Data 0.013 (0.015)	Loss 1.837 (0.402)
Epoch: [1-4][600/1000]	Time 0.381 (0.383)	Data 0.011 (0.014)	Loss 0.134 (0.398)
Epoch: [1-4][800/1000]	Time 0.375 (0.383)	Data 0.011 (0.014)	Loss 0.353 (0.390)
Epoch: [1-4][1000/1000]	Time 0.377 (0.383)	Data 0.007 (0.013)	Loss 0.173 (0.376)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.539 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.549 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.538 (0.539)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.535 (0.538)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.527 (0.538)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-5][200/1000]	Time 0.377 (0.386)	Data 0.014 (0.017)	Loss 0.015 (0.396)
Epoch: [1-5][400/1000]	Time 0.377 (0.383)	Data 0.011 (0.015)	Loss 0.076 (0.325)
Epoch: [1-5][600/1000]	Time 0.380 (0.383)	Data 0.011 (0.014)	Loss 0.068 (0.329)
Epoch: [1-5][800/1000]	Time 0.382 (0.382)	Data 0.013 (0.014)	Loss 0.926 (0.344)
Epoch: [1-5][1000/1000]	Time 0.375 (0.382)	Data 0.007 (0.013)	Loss 0.026 (0.365)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.537 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.537 (0.538)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.536 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.540 (0.536)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.527 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-6][200/1000]	Time 0.388 (0.385)	Data 0.010 (0.017)	Loss 0.424 (0.294)
Epoch: [1-6][400/1000]	Time 0.380 (0.383)	Data 0.012 (0.015)	Loss 0.034 (0.321)
Epoch: [1-6][600/1000]	Time 0.375 (0.382)	Data 0.012 (0.014)	Loss 0.518 (0.340)
Epoch: [1-6][800/1000]	Time 0.380 (0.382)	Data 0.012 (0.014)	Loss 0.010 (0.345)
Epoch: [1-6][1000/1000]	Time 0.376 (0.382)	Data 0.007 (0.013)	Loss 0.309 (0.347)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.535 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.534 (0.538)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.532 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.541 (0.536)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.526 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [1-7][200/320]	Time 0.376 (0.386)	Data 0.012 (0.017)	Loss 0.007 (0.281)
Extract Features: [100/551]	Time 0.524 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/551]	Time 0.526 (0.538)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.538 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.526 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/551]	Time 0.537 (0.536)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.5%
  top-5          94.8%
  top-10         96.7%

 * Finished epoch   1 recall@1: 86.5%  recall@5: 94.8%  recall@10: 96.7%  best@5: 95.1%

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.536 (0.544)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.537 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.538 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.539 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.534 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-0][200/1000]	Time 0.377 (0.386)	Data 0.012 (0.017)	Loss 0.006 (0.298)
Epoch: [2-0][400/1000]	Time 0.377 (0.384)	Data 0.012 (0.015)	Loss 0.019 (0.286)
Epoch: [2-0][600/1000]	Time 0.381 (0.383)	Data 0.011 (0.014)	Loss 0.084 (0.285)
Epoch: [2-0][800/1000]	Time 0.380 (0.382)	Data 0.012 (0.014)	Loss 0.283 (0.293)
Epoch: [2-0][1000/1000]	Time 0.374 (0.382)	Data 0.007 (0.013)	Loss 0.420 (0.289)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.552 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.527 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.534 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.605 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.538 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-1][200/1000]	Time 0.388 (0.386)	Data 0.016 (0.018)	Loss 1.718 (0.256)
Epoch: [2-1][400/1000]	Time 0.376 (0.384)	Data 0.012 (0.015)	Loss 0.119 (0.264)
Epoch: [2-1][600/1000]	Time 0.378 (0.383)	Data 0.013 (0.014)	Loss 0.273 (0.273)
Epoch: [2-1][800/1000]	Time 0.383 (0.382)	Data 0.011 (0.014)	Loss 0.008 (0.278)
Epoch: [2-1][1000/1000]	Time 0.412 (0.382)	Data 0.006 (0.013)	Loss 0.016 (0.271)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.534 (0.542)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.532 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.526 (0.537)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.526 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.538 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-2][200/1000]	Time 0.381 (0.387)	Data 0.012 (0.018)	Loss 0.016 (0.270)
Epoch: [2-2][400/1000]	Time 0.380 (0.384)	Data 0.011 (0.015)	Loss 0.206 (0.272)
Epoch: [2-2][600/1000]	Time 0.377 (0.383)	Data 0.011 (0.014)	Loss 0.957 (0.288)
Epoch: [2-2][800/1000]	Time 0.379 (0.382)	Data 0.014 (0.014)	Loss 0.203 (0.280)
Epoch: [2-2][1000/1000]	Time 0.376 (0.382)	Data 0.007 (0.014)	Loss 0.013 (0.287)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.537 (0.543)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.527 (0.539)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.525 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.539 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.539 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-3][200/1000]	Time 0.385 (0.386)	Data 0.013 (0.017)	Loss 0.184 (0.285)
Epoch: [2-3][400/1000]	Time 0.376 (0.384)	Data 0.011 (0.015)	Loss 0.026 (0.288)
Epoch: [2-3][600/1000]	Time 0.381 (0.383)	Data 0.013 (0.014)	Loss 0.356 (0.277)
Epoch: [2-3][800/1000]	Time 0.376 (0.381)	Data 0.011 (0.014)	Loss 0.011 (0.276)
Epoch: [2-3][1000/1000]	Time 0.367 (0.380)	Data 0.006 (0.013)	Loss 0.005 (0.274)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.526 (0.538)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.531 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.530 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.531 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.545 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-4][200/1000]	Time 0.378 (0.380)	Data 0.010 (0.017)	Loss 0.038 (0.403)
Epoch: [2-4][400/1000]	Time 0.377 (0.378)	Data 0.012 (0.015)	Loss 0.074 (0.315)
Epoch: [2-4][600/1000]	Time 0.380 (0.377)	Data 0.016 (0.014)	Loss 0.563 (0.311)
Epoch: [2-4][800/1000]	Time 0.376 (0.377)	Data 0.015 (0.014)	Loss 0.025 (0.307)
Epoch: [2-4][1000/1000]	Time 0.371 (0.377)	Data 0.007 (0.013)	Loss 0.084 (0.305)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.520 (0.537)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.528 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.533 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.529 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.529 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-5][200/1000]	Time 0.375 (0.381)	Data 0.014 (0.017)	Loss 0.325 (0.212)
Epoch: [2-5][400/1000]	Time 0.379 (0.378)	Data 0.014 (0.015)	Loss 0.232 (0.238)
Epoch: [2-5][600/1000]	Time 0.373 (0.378)	Data 0.011 (0.014)	Loss 0.061 (0.256)
Epoch: [2-5][800/1000]	Time 0.377 (0.377)	Data 0.011 (0.014)	Loss 0.071 (0.260)
Epoch: [2-5][1000/1000]	Time 0.367 (0.377)	Data 0.006 (0.013)	Loss 0.000 (0.269)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.529 (0.536)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.533 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.531 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.537 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.533 (0.531)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-6][200/1000]	Time 0.376 (0.381)	Data 0.015 (0.017)	Loss 0.037 (0.253)
Epoch: [2-6][400/1000]	Time 0.378 (0.378)	Data 0.013 (0.015)	Loss 0.123 (0.270)
Epoch: [2-6][600/1000]	Time 0.374 (0.378)	Data 0.014 (0.014)	Loss 0.018 (0.270)
Epoch: [2-6][800/1000]	Time 0.374 (0.377)	Data 0.011 (0.014)	Loss 0.038 (0.274)
Epoch: [2-6][1000/1000]	Time 0.373 (0.377)	Data 0.008 (0.013)	Loss 0.176 (0.277)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.520 (0.537)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.531 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.534 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.521 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.531 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [2-7][200/320]	Time 0.373 (0.381)	Data 0.011 (0.017)	Loss 0.252 (0.234)
Extract Features: [100/551]	Time 0.519 (0.538)	Data 0.000 (0.009)	
Extract Features: [200/551]	Time 0.528 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.529 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.531 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/551]	Time 0.521 (0.531)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          87.2%
  top-5          95.1%
  top-10         96.9%

 * Finished epoch   2 recall@1: 87.2%  recall@5: 95.1%  recall@10: 96.9%  best@5: 95.1%

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.529 (0.535)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.521 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.521 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.534 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.522 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-0][200/1000]	Time 0.375 (0.381)	Data 0.011 (0.017)	Loss 0.911 (0.217)
Epoch: [3-0][400/1000]	Time 0.376 (0.378)	Data 0.011 (0.015)	Loss 0.172 (0.197)
Epoch: [3-0][600/1000]	Time 0.376 (0.378)	Data 0.014 (0.014)	Loss 0.015 (0.198)
Epoch: [3-0][800/1000]	Time 0.381 (0.377)	Data 0.015 (0.014)	Loss 0.023 (0.192)
Epoch: [3-0][1000/1000]	Time 0.371 (0.377)	Data 0.007 (0.013)	Loss 0.010 (0.199)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.530 (0.536)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.527 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.520 (0.530)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.524 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.532 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-1][200/1000]	Time 0.379 (0.381)	Data 0.013 (0.017)	Loss 1.863 (0.240)
Epoch: [3-1][400/1000]	Time 0.384 (0.379)	Data 0.016 (0.015)	Loss 0.045 (0.246)
Epoch: [3-1][600/1000]	Time 0.377 (0.378)	Data 0.013 (0.014)	Loss 0.010 (0.223)
Epoch: [3-1][800/1000]	Time 0.377 (0.377)	Data 0.013 (0.014)	Loss 0.024 (0.204)
Epoch: [3-1][1000/1000]	Time 0.372 (0.377)	Data 0.006 (0.013)	Loss 0.393 (0.199)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.518 (0.536)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.515 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.530 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.523 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.519 (0.529)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-2][200/1000]	Time 0.373 (0.380)	Data 0.012 (0.017)	Loss 0.313 (0.218)
Epoch: [3-2][400/1000]	Time 0.373 (0.378)	Data 0.012 (0.015)	Loss 0.183 (0.203)
Epoch: [3-2][600/1000]	Time 0.378 (0.377)	Data 0.013 (0.014)	Loss 0.034 (0.213)
Epoch: [3-2][800/1000]	Time 0.380 (0.377)	Data 0.011 (0.014)	Loss 0.770 (0.218)
Epoch: [3-2][1000/1000]	Time 0.368 (0.377)	Data 0.006 (0.013)	Loss 0.075 (0.210)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.530 (0.536)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.531 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.518 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.520 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.533 (0.529)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-3][200/1000]	Time 0.371 (0.381)	Data 0.011 (0.017)	Loss 0.046 (0.184)
Epoch: [3-3][400/1000]	Time 0.379 (0.378)	Data 0.013 (0.015)	Loss 0.226 (0.176)
Epoch: [3-3][600/1000]	Time 0.377 (0.378)	Data 0.013 (0.014)	Loss 0.086 (0.189)
Epoch: [3-3][800/1000]	Time 0.377 (0.377)	Data 0.012 (0.014)	Loss 0.000 (0.179)
Epoch: [3-3][1000/1000]	Time 0.372 (0.377)	Data 0.007 (0.013)	Loss 0.007 (0.184)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.521 (0.539)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.532 (0.534)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.529 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.535 (0.532)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.521 (0.531)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-4][200/1000]	Time 0.382 (0.381)	Data 0.014 (0.017)	Loss 0.396 (0.222)
Epoch: [3-4][400/1000]	Time 0.376 (0.378)	Data 0.011 (0.015)	Loss 0.049 (0.222)
Epoch: [3-4][600/1000]	Time 0.376 (0.377)	Data 0.016 (0.014)	Loss 0.278 (0.211)
Epoch: [3-4][800/1000]	Time 0.380 (0.377)	Data 0.013 (0.014)	Loss 0.235 (0.219)
Epoch: [3-4][1000/1000]	Time 0.367 (0.377)	Data 0.006 (0.013)	Loss 0.277 (0.215)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.519 (0.537)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.527 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.520 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.534 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.522 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-5][200/1000]	Time 0.376 (0.381)	Data 0.014 (0.017)	Loss 0.002 (0.231)
Epoch: [3-5][400/1000]	Time 0.375 (0.379)	Data 0.011 (0.015)	Loss 0.498 (0.193)
Epoch: [3-5][600/1000]	Time 0.378 (0.378)	Data 0.013 (0.014)	Loss 1.841 (0.211)
Epoch: [3-5][800/1000]	Time 0.370 (0.377)	Data 0.012 (0.014)	Loss 0.250 (0.217)
Epoch: [3-5][1000/1000]	Time 0.366 (0.377)	Data 0.007 (0.013)	Loss 0.220 (0.221)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.532 (0.537)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.529 (0.534)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.534 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.535 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.521 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-6][200/1000]	Time 0.382 (0.381)	Data 0.012 (0.017)	Loss 0.166 (0.235)
Epoch: [3-6][400/1000]	Time 0.376 (0.378)	Data 0.011 (0.015)	Loss 0.133 (0.224)
Epoch: [3-6][600/1000]	Time 0.377 (0.377)	Data 0.012 (0.014)	Loss 0.022 (0.214)
Epoch: [3-6][800/1000]	Time 0.373 (0.377)	Data 0.012 (0.014)	Loss 0.152 (0.217)
Epoch: [3-6][1000/1000]	Time 0.370 (0.377)	Data 0.007 (0.013)	Loss 0.048 (0.219)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.532 (0.536)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.535 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.532 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.531 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.531 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [3-7][200/320]	Time 0.377 (0.381)	Data 0.011 (0.017)	Loss 0.127 (0.280)
Extract Features: [100/551]	Time 0.518 (0.538)	Data 0.000 (0.009)	
Extract Features: [200/551]	Time 0.534 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.535 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.531 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/551]	Time 0.528 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.4%
  top-5          94.5%
  top-10         96.4%

 * Finished epoch   3 recall@1: 86.4%  recall@5: 94.5%  recall@10: 96.4%  best@5: 95.1%

===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.515 (0.534)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.530 (0.530)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.529 (0.529)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.531 (0.528)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.531 (0.528)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-0][200/1000]	Time 0.382 (0.381)	Data 0.017 (0.018)	Loss 0.035 (0.161)
Epoch: [4-0][400/1000]	Time 0.371 (0.378)	Data 0.010 (0.015)	Loss 0.565 (0.159)
Epoch: [4-0][600/1000]	Time 0.377 (0.377)	Data 0.014 (0.014)	Loss 0.013 (0.152)
Epoch: [4-0][800/1000]	Time 0.374 (0.377)	Data 0.012 (0.014)	Loss 0.182 (0.152)
Epoch: [4-0][1000/1000]	Time 0.367 (0.377)	Data 0.007 (0.014)	Loss 0.008 (0.155)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.532 (0.537)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.533 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.523 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.537 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.520 (0.531)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-1][200/1000]	Time 0.376 (0.381)	Data 0.011 (0.018)	Loss 0.000 (0.173)
Epoch: [4-1][400/1000]	Time 0.374 (0.378)	Data 0.011 (0.015)	Loss 0.030 (0.180)
Epoch: [4-1][600/1000]	Time 0.374 (0.378)	Data 0.012 (0.014)	Loss 0.010 (0.181)
Epoch: [4-1][800/1000]	Time 0.379 (0.377)	Data 0.012 (0.014)	Loss 0.127 (0.201)
Epoch: [4-1][1000/1000]	Time 0.370 (0.377)	Data 0.007 (0.013)	Loss 0.010 (0.192)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.529 (0.536)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.530 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.533 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.531 (0.530)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.518 (0.529)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-2][200/1000]	Time 0.376 (0.381)	Data 0.011 (0.017)	Loss 0.006 (0.145)
Epoch: [4-2][400/1000]	Time 0.377 (0.378)	Data 0.012 (0.015)	Loss 0.103 (0.136)
Epoch: [4-2][600/1000]	Time 0.380 (0.378)	Data 0.016 (0.014)	Loss 0.177 (0.156)
Epoch: [4-2][800/1000]	Time 0.375 (0.377)	Data 0.011 (0.014)	Loss 0.001 (0.159)
Epoch: [4-2][1000/1000]	Time 0.371 (0.377)	Data 0.007 (0.013)	Loss 0.182 (0.162)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.533 (0.539)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.530 (0.534)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.534 (0.533)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.523 (0.532)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.531 (0.531)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-3][200/1000]	Time 0.371 (0.381)	Data 0.010 (0.017)	Loss 0.278 (0.149)
Epoch: [4-3][400/1000]	Time 0.379 (0.378)	Data 0.013 (0.015)	Loss 0.171 (0.149)
Epoch: [4-3][600/1000]	Time 0.385 (0.378)	Data 0.018 (0.014)	Loss 0.170 (0.155)
Epoch: [4-3][800/1000]	Time 0.372 (0.377)	Data 0.011 (0.014)	Loss 0.021 (0.163)
Epoch: [4-3][1000/1000]	Time 0.366 (0.377)	Data 0.007 (0.013)	Loss 0.029 (0.155)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.529 (0.537)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.531 (0.533)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.520 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.521 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.534 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-4][200/1000]	Time 0.379 (0.380)	Data 0.015 (0.017)	Loss 0.022 (0.151)
Epoch: [4-4][400/1000]	Time 0.380 (0.378)	Data 0.014 (0.015)	Loss 0.032 (0.144)
Epoch: [4-4][600/1000]	Time 0.376 (0.377)	Data 0.010 (0.014)	Loss 0.117 (0.142)
Epoch: [4-4][800/1000]	Time 0.372 (0.377)	Data 0.011 (0.014)	Loss 0.006 (0.139)
Epoch: [4-4][1000/1000]	Time 0.371 (0.377)	Data 0.007 (0.013)	Loss 0.008 (0.131)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.531 (0.537)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.530 (0.534)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.520 (0.532)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.535 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.535 (0.531)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-5][200/1000]	Time 0.371 (0.381)	Data 0.011 (0.017)	Loss 0.151 (0.143)
Epoch: [4-5][400/1000]	Time 0.377 (0.378)	Data 0.012 (0.015)	Loss 0.038 (0.146)
Epoch: [4-5][600/1000]	Time 0.375 (0.378)	Data 0.011 (0.014)	Loss 0.674 (0.153)
Epoch: [4-5][800/1000]	Time 0.376 (0.377)	Data 0.011 (0.014)	Loss 0.055 (0.145)
Epoch: [4-5][1000/1000]	Time 0.366 (0.377)	Data 0.006 (0.013)	Loss 0.132 (0.145)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.519 (0.536)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.531 (0.532)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.537 (0.531)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.536 (0.531)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.533 (0.530)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-6][200/1000]	Time 0.382 (0.386)	Data 0.013 (0.017)	Loss 0.353 (0.138)
Epoch: [4-6][400/1000]	Time 0.382 (0.384)	Data 0.011 (0.015)	Loss 0.027 (0.138)
Epoch: [4-6][600/1000]	Time 0.381 (0.383)	Data 0.013 (0.014)	Loss 0.016 (0.150)
Epoch: [4-6][800/1000]	Time 0.381 (0.382)	Data 0.011 (0.014)	Loss 0.167 (0.149)
Epoch: [4-6][1000/1000]	Time 0.371 (0.382)	Data 0.007 (0.013)	Loss 0.052 (0.147)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.526 (0.544)	Data 0.000 (0.009)	
Extract Features: [200/542]	Time 0.522 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.537 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.537 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.526 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-7][200/320]	Time 0.381 (0.386)	Data 0.012 (0.017)	Loss 0.073 (0.148)
Extract Features: [100/551]	Time 0.533 (0.545)	Data 0.000 (0.010)	
Extract Features: [200/551]	Time 0.523 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.539 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/551]	Time 0.533 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/551]	Time 0.541 (0.537)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.1%
  top-5          94.5%
  top-10         96.4%

 * Finished epoch   4 recall@1: 86.1%  recall@5: 94.5%  recall@10: 96.4%  best@5: 95.1%

Performing PCA reduction on the best model:
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar'
Extract Features: [100/542]	Time 0.523 (0.544)	Data 0.000 (0.010)	
Extract Features: [200/542]	Time 0.539 (0.540)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.535 (0.538)	Data 0.000 (0.003)	
Extract Features: [400/542]	Time 0.539 (0.537)	Data 0.000 (0.002)	
Extract Features: [500/542]	Time 0.534 (0.536)	Data 0.000 (0.002)	
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Testing on Pitts30k-test:
load PCA parameters...
Extract Features: [100/526]	Time 0.539 (0.545)	Data 0.000 (0.010)	
Extract Features: [200/526]	Time 0.531 (0.541)	Data 0.000 (0.005)	
Extract Features: [300/526]	Time 0.536 (0.540)	Data 0.000 (0.003)	
Extract Features: [400/526]	Time 0.539 (0.539)	Data 0.000 (0.003)	
Extract Features: [500/526]	Time 0.599 (0.538)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          89.0%
  top-5          94.1%
  top-10         95.6%
==========Testing=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint0.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint1.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint2.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint3.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint4.pth.tar /home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar
==============================
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint0.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint0.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint0.pth.tar'
=> Start epoch 0  best recall5 95.1%
Extract Features: [100/542]	Time 0.507 (0.552)	Data 0.000 (0.017)	
Extract Features: [200/542]	Time 0.511 (0.531)	Data 0.000 (0.009)	
Extract Features: [300/542]	Time 0.506 (0.524)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.510 (0.521)	Data 0.000 (0.004)	
Extract Features: [500/542]	Time 0.507 (0.519)	Data 0.000 (0.003)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.501 (0.522)	Data 0.000 (0.018)	
Extract Features: [200/213]	Time 0.504 (0.514)	Data 0.000 (0.009)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.502 (0.523)	Data 0.000 (0.018)	
Extract Features: [200/313]	Time 0.507 (0.514)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.500 (0.511)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.9%
  top-5          94.3%
  top-10         95.6%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint0.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint0.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint0.pth.tar'
=> Start epoch 0  best recall5 95.1%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.054 (0.099)	Data 0.000 (0.049)	
Extract Features: [200/315]	Time 0.073 (0.086)	Data 0.036 (0.043)	
Extract Features: [300/315]	Time 0.045 (0.089)	Data 0.000 (0.042)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.515 (0.555)	Data 0.000 (0.019)	
Extract Features: [200/2375]	Time 0.514 (0.536)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.515 (0.530)	Data 0.000 (0.007)	
Extract Features: [400/2375]	Time 0.518 (0.527)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.515 (0.526)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.514 (0.524)	Data 0.000 (0.003)	
Extract Features: [700/2375]	Time 0.515 (0.524)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.518 (0.523)	Data 0.000 (0.002)	
Extract Features: [900/2375]	Time 0.516 (0.523)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.514 (0.522)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.516 (0.522)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.512 (0.522)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.519 (0.522)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.517 (0.521)	Data 0.000 (0.001)	
Extract Features: [1500/2375]	Time 0.525 (0.521)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.520 (0.521)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.521 (0.521)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.519 (0.521)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.516 (0.521)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.519 (0.521)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.516 (0.521)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.525 (0.521)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.526 (0.521)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          81.9%
  top-5          88.9%
  top-10         92.7%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint1.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint1.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint1.pth.tar'
=> Start epoch 1  best recall5 95.1%
Extract Features: [100/542]	Time 0.510 (0.554)	Data 0.000 (0.016)	
Extract Features: [200/542]	Time 0.513 (0.534)	Data 0.000 (0.008)	
Extract Features: [300/542]	Time 0.512 (0.527)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.512 (0.523)	Data 0.000 (0.004)	
Extract Features: [500/542]	Time 0.510 (0.521)	Data 0.000 (0.003)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.512 (0.532)	Data 0.000 (0.018)	
Extract Features: [200/213]	Time 0.515 (0.523)	Data 0.000 (0.009)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.514 (0.533)	Data 0.000 (0.018)	
Extract Features: [200/313]	Time 0.515 (0.525)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.509 (0.522)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.9%
  top-5          94.7%
  top-10         95.8%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint1.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint1.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint1.pth.tar'
=> Start epoch 1  best recall5 95.1%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.112 (0.097)	Data 0.074 (0.049)	
Extract Features: [200/315]	Time 0.063 (0.085)	Data 0.026 (0.042)	
Extract Features: [300/315]	Time 0.045 (0.088)	Data 0.000 (0.041)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.512 (0.554)	Data 0.000 (0.019)	
Extract Features: [200/2375]	Time 0.511 (0.535)	Data 0.000 (0.009)	
Extract Features: [300/2375]	Time 0.520 (0.529)	Data 0.000 (0.006)	
Extract Features: [400/2375]	Time 0.516 (0.526)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.513 (0.524)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.512 (0.523)	Data 0.000 (0.003)	
Extract Features: [700/2375]	Time 0.512 (0.522)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.517 (0.521)	Data 0.000 (0.002)	
Extract Features: [900/2375]	Time 0.515 (0.521)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.512 (0.520)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.519 (0.520)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.514 (0.520)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.518 (0.520)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.515 (0.520)	Data 0.000 (0.001)	
Extract Features: [1500/2375]	Time 0.515 (0.520)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.512 (0.519)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.517 (0.519)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.515 (0.519)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.515 (0.519)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.515 (0.519)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.516 (0.519)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.516 (0.519)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.513 (0.519)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          84.1%
  top-5          89.8%
  top-10         92.1%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint2.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint2.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint2.pth.tar'
=> Start epoch 2  best recall5 95.1%
Extract Features: [100/542]	Time 0.509 (0.553)	Data 0.000 (0.016)	
Extract Features: [200/542]	Time 0.509 (0.533)	Data 0.000 (0.008)	
Extract Features: [300/542]	Time 0.512 (0.526)	Data 0.000 (0.005)	
Extract Features: [400/542]	Time 0.513 (0.522)	Data 0.000 (0.004)	
Extract Features: [500/542]	Time 0.509 (0.520)	Data 0.000 (0.003)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.571 (0.533)	Data 0.000 (0.018)	
Extract Features: [200/213]	Time 0.515 (0.524)	Data 0.000 (0.009)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.514 (0.534)	Data 0.000 (0.018)	
Extract Features: [200/313]	Time 0.515 (0.525)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.509 (0.522)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          89.2%
  top-5          94.7%
  top-10         96.0%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint2.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint2.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint2.pth.tar'
=> Start epoch 2  best recall5 95.1%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.062 (0.098)	Data 0.025 (0.049)	
Extract Features: [200/315]	Time 0.074 (0.085)	Data 0.037 (0.042)	
Extract Features: [300/315]	Time 0.045 (0.088)	Data 0.000 (0.042)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.518 (0.558)	Data 0.000 (0.019)	
Extract Features: [200/2375]	Time 0.518 (0.538)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.516 (0.532)	Data 0.000 (0.006)	
Extract Features: [400/2375]	Time 0.518 (0.529)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.520 (0.527)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.518 (0.527)	Data 0.000 (0.003)	
Extract Features: [700/2375]	Time 0.519 (0.526)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.520 (0.525)	Data 0.000 (0.002)	
Extract Features: [900/2375]	Time 0.525 (0.525)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.513 (0.524)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.521 (0.524)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.514 (0.524)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.552 (0.523)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.516 (0.523)	Data 0.000 (0.001)	
Extract Features: [1500/2375]	Time 0.520 (0.523)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.516 (0.523)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.553 (0.523)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.518 (0.522)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.516 (0.522)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.521 (0.522)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.560 (0.522)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.519 (0.522)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.519 (0.522)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          81.0%
  top-5          87.6%
  top-10         89.5%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint3.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint3.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint3.pth.tar'
=> Start epoch 3  best recall5 95.1%
Extract Features: [100/542]	Time 0.510 (0.554)	Data 0.000 (0.017)	
Extract Features: [200/542]	Time 0.510 (0.534)	Data 0.000 (0.009)	
Extract Features: [300/542]	Time 0.511 (0.527)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.512 (0.523)	Data 0.000 (0.004)	
Extract Features: [500/542]	Time 0.511 (0.521)	Data 0.000 (0.003)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.503 (0.525)	Data 0.000 (0.018)	
Extract Features: [200/213]	Time 0.507 (0.516)	Data 0.000 (0.009)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.505 (0.525)	Data 0.000 (0.018)	
Extract Features: [200/313]	Time 0.506 (0.516)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.501 (0.513)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          89.3%
  top-5          94.7%
  top-10         95.9%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint3.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint3.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint3.pth.tar'
=> Start epoch 3  best recall5 95.1%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.103 (0.099)	Data 0.061 (0.050)	
Extract Features: [200/315]	Time 0.092 (0.086)	Data 0.055 (0.042)	
Extract Features: [300/315]	Time 0.046 (0.089)	Data 0.000 (0.042)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.512 (0.554)	Data 0.000 (0.020)	
Extract Features: [200/2375]	Time 0.509 (0.533)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.513 (0.527)	Data 0.000 (0.007)	
Extract Features: [400/2375]	Time 0.517 (0.524)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.512 (0.523)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.513 (0.521)	Data 0.000 (0.003)	
Extract Features: [700/2375]	Time 0.581 (0.521)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.515 (0.520)	Data 0.000 (0.003)	
Extract Features: [900/2375]	Time 0.511 (0.520)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.510 (0.519)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.514 (0.519)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.510 (0.519)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.514 (0.519)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.513 (0.519)	Data 0.000 (0.001)	
Extract Features: [1500/2375]	Time 0.516 (0.518)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.513 (0.518)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.515 (0.518)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.513 (0.518)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.512 (0.518)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.536 (0.518)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.517 (0.518)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.514 (0.518)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.513 (0.518)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          79.0%
  top-5          88.3%
  top-10         91.1%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint4.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint4.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint4.pth.tar'
=> Start epoch 4  best recall5 95.1%
Extract Features: [100/542]	Time 0.510 (0.555)	Data 0.000 (0.017)	
Extract Features: [200/542]	Time 0.508 (0.534)	Data 0.000 (0.008)	
Extract Features: [300/542]	Time 0.508 (0.526)	Data 0.000 (0.006)	
Extract Features: [400/542]	Time 0.512 (0.523)	Data 0.000 (0.004)	
Extract Features: [500/542]	Time 0.543 (0.520)	Data 0.000 (0.003)	
gathering features from rank no.0
calculating PCA parameters...
================= PCA RESULT ==================
U: (32768, 4096)
lams: (4096,)
mu: (32768, 1)
Utmu: (4096, 1)
===============================================
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.513 (0.533)	Data 0.000 (0.018)	
Extract Features: [200/213]	Time 0.516 (0.525)	Data 0.000 (0.009)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.515 (0.535)	Data 0.000 (0.018)	
Extract Features: [200/313]	Time 0.516 (0.526)	Data 0.000 (0.009)	
Extract Features: [300/313]	Time 0.511 (0.522)	Data 0.000 (0.006)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          88.6%
  top-5          94.3%
  top-10         95.8%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint4.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint4.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/checkpoint4.pth.tar'
=> Start epoch 4  best recall5 95.1%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.037 (0.098)	Data 0.000 (0.049)	
Extract Features: [200/315]	Time 0.090 (0.085)	Data 0.053 (0.042)	
Extract Features: [300/315]	Time 0.046 (0.089)	Data 0.000 (0.042)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.516 (0.558)	Data 0.000 (0.019)	
Extract Features: [200/2375]	Time 0.516 (0.538)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.515 (0.531)	Data 0.000 (0.006)	
Extract Features: [400/2375]	Time 0.518 (0.528)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.520 (0.527)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.516 (0.526)	Data 0.000 (0.003)	
Extract Features: [700/2375]	Time 0.517 (0.525)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.521 (0.524)	Data 0.000 (0.002)	
Extract Features: [900/2375]	Time 0.519 (0.524)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.515 (0.524)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.517 (0.524)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.517 (0.523)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.521 (0.523)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.518 (0.523)	Data 0.000 (0.001)	
Extract Features: [1500/2375]	Time 0.520 (0.523)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.514 (0.523)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.518 (0.523)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.516 (0.523)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.516 (0.522)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.519 (0.522)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.519 (0.522)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.517 (0.522)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.514 (0.522)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          80.3%
  top-5          88.6%
  top-10         90.5%
==========Test on Pitts30k=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='pitts', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar'
=> Start epoch 0  best recall5 95.1%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/213]	Time 0.512 (0.557)	Data 0.000 (0.017)	
Extract Features: [200/213]	Time 0.512 (0.536)	Data 0.000 (0.008)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/313]	Time 0.513 (0.531)	Data 0.000 (0.016)	
Extract Features: [200/313]	Time 0.516 (0.523)	Data 0.000 (0.008)	
Extract Features: [300/313]	Time 0.509 (0.521)	Data 0.000 (0.005)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          89.0%
  top-5          94.1%
  top-10         95.6%
==========Test on Tokyo247=============
/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar
=======================================
Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='30k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, method='graphvlad', data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data', logs_dir='/home/leo/usman_ws/codes/OpenIBL/examples/logs', esp_encoder='/home/leo/usman_ws/datasets/espnet-encoder/espnet_p_2_q_8.pth', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
===> Loading segmentation model
Encoder loaded!
=> Loaded checkpoint '/home/leo/usman_ws/models/openibl/official/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-13-Apr/model_best.pth.tar'
=> Start epoch 0  best recall5 95.1%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.038 (0.098)	Data 0.000 (0.049)	
Extract Features: [200/315]	Time 0.077 (0.085)	Data 0.040 (0.042)	
Extract Features: [300/315]	Time 0.045 (0.088)	Data 0.000 (0.041)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 0.518 (0.555)	Data 0.000 (0.019)	
Extract Features: [200/2375]	Time 0.519 (0.538)	Data 0.000 (0.010)	
Extract Features: [300/2375]	Time 0.519 (0.533)	Data 0.000 (0.006)	
Extract Features: [400/2375]	Time 0.518 (0.530)	Data 0.000 (0.005)	
Extract Features: [500/2375]	Time 0.519 (0.528)	Data 0.000 (0.004)	
Extract Features: [600/2375]	Time 0.517 (0.527)	Data 0.000 (0.003)	
Extract Features: [700/2375]	Time 0.518 (0.526)	Data 0.000 (0.003)	
Extract Features: [800/2375]	Time 0.520 (0.526)	Data 0.000 (0.002)	
Extract Features: [900/2375]	Time 0.518 (0.525)	Data 0.000 (0.002)	
Extract Features: [1000/2375]	Time 0.516 (0.525)	Data 0.000 (0.002)	
Extract Features: [1100/2375]	Time 0.519 (0.524)	Data 0.000 (0.002)	
Extract Features: [1200/2375]	Time 0.515 (0.524)	Data 0.000 (0.002)	
Extract Features: [1300/2375]	Time 0.519 (0.524)	Data 0.000 (0.002)	
Extract Features: [1400/2375]	Time 0.518 (0.524)	Data 0.000 (0.001)	
Extract Features: [1500/2375]	Time 0.559 (0.524)	Data 0.000 (0.001)	
Extract Features: [1600/2375]	Time 0.521 (0.524)	Data 0.000 (0.001)	
Extract Features: [1700/2375]	Time 0.518 (0.523)	Data 0.000 (0.001)	
Extract Features: [1800/2375]	Time 0.517 (0.523)	Data 0.000 (0.001)	
Extract Features: [1900/2375]	Time 0.577 (0.523)	Data 0.000 (0.001)	
Extract Features: [2000/2375]	Time 0.521 (0.523)	Data 0.000 (0.001)	
Extract Features: [2100/2375]	Time 0.522 (0.523)	Data 0.000 (0.001)	
Extract Features: [2200/2375]	Time 0.520 (0.523)	Data 0.000 (0.001)	
Extract Features: [2300/2375]	Time 0.516 (0.523)	Data 0.000 (0.001)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          81.0%
  top-5          87.0%
  top-10         91.1%
