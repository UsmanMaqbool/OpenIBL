Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='250k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/media/leo/2C737A9872F69ECF/models/graphnetvlad/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-09-Apr-0207/checkpoint1.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, data_dir='/mnt/ssd/usman_ws/OpenIBL/examples/data', logs_dir='/mnt/ssd/usman_ws/OpenIBL/examples/logs', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
Encoder loaded!
=> Loaded checkpoint '/media/leo/2C737A9872F69ECF/models/graphnetvlad/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-09-Apr-0207/checkpoint1.pth.tar'
=> Start epoch 1  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.048 (0.078)	Data 0.000 (0.010)	
Extract Features: [200/315]	Time 0.051 (0.063)	Data 0.000 (0.005)	
Extract Features: [300/315]	Time 0.057 (0.062)	Data 0.000 (0.004)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 1.883 (1.159)	Data 1.195 (0.424)	
Extract Features: [200/2375]	Time 0.702 (1.136)	Data 0.000 (0.414)	
Extract Features: [300/2375]	Time 0.705 (1.113)	Data 0.000 (0.392)	
Extract Features: [400/2375]	Time 0.704 (1.130)	Data 0.000 (0.410)	
Extract Features: [500/2375]	Time 0.702 (1.131)	Data 0.000 (0.411)	
Extract Features: [600/2375]	Time 0.698 (1.131)	Data 0.000 (0.413)	
Extract Features: [700/2375]	Time 0.712 (1.129)	Data 0.000 (0.411)	
Extract Features: [800/2375]	Time 0.707 (1.129)	Data 0.000 (0.412)	
Extract Features: [900/2375]	Time 0.750 (1.131)	Data 0.000 (0.413)	
Extract Features: [1000/2375]	Time 0.696 (1.128)	Data 0.000 (0.411)	
Extract Features: [1100/2375]	Time 0.711 (1.130)	Data 0.000 (0.413)	
Extract Features: [1200/2375]	Time 0.766 (1.135)	Data 0.000 (0.418)	
Extract Features: [1300/2375]	Time 0.758 (1.132)	Data 0.000 (0.416)	
Extract Features: [1400/2375]	Time 0.766 (1.134)	Data 0.000 (0.418)	
Extract Features: [1500/2375]	Time 0.722 (1.136)	Data 0.000 (0.419)	
Extract Features: [1600/2375]	Time 0.730 (1.136)	Data 0.000 (0.420)	
Extract Features: [1700/2375]	Time 0.698 (1.138)	Data 0.000 (0.424)	
Extract Features: [1800/2375]	Time 0.677 (1.138)	Data 0.000 (0.425)	
Extract Features: [1900/2375]	Time 0.673 (1.139)	Data 0.000 (0.428)	
Extract Features: [2000/2375]	Time 0.674 (1.138)	Data 0.000 (0.428)	
Extract Features: [2100/2375]	Time 0.791 (1.138)	Data 0.000 (0.429)	
Extract Features: [2200/2375]	Time 0.711 (1.139)	Data 0.000 (0.430)	
Extract Features: [2300/2375]	Time 0.745 (1.138)	Data 0.000 (0.429)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          79.4%
  top-5          87.6%
  top-10         90.2%
