Use GPU: 0 for training, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='6010', dataset='pitts', scale='30k', tuple_size=1, test_batch_size=16, cache_size=1000, workers=2, height=480, width=640, num_clusters=64, pos_num=10, pos_pool=20, neg_num=10, neg_pool=1000, arch='vgg16', layers='conv5', nowhiten=False, syncbn=True, sync_gather=False, features=4096, lr=0.001, momentum=0.9, weight_decay=0.001, step_size=5, resume='', eval_step=1, epochs=5, generations=4, loss_type='sare_ind', temperature=[0.07, 0.07, 0.06, 0.05], soft_weight=0.5, iters=0, seed=43, deterministic=False, print_freq=200, margin=0.1, data_dir='/mnt/ssd/usman_ws/OpenIBL/examples/data', logs_dir='logs/netVLAD/pitts30k-vgg16/conv5-sare_ind-lr0.001-tuple1-SFRS', init_dir='/mnt/ssd/usman_ws/OpenIBL/examples/../logs', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
Loading centroids from /mnt/ssd/usman_ws/OpenIBL/examples/../logs/vgg16_pitts_64_desc_cen.hdf5
Loading centroids from /mnt/ssd/usman_ws/OpenIBL/examples/../logs/vgg16_pitts_64_desc_cen.hdf5
Test the initial model:
Extract Features: [500/1101]	Time 0.132 (0.361)	Data 0.000 (0.223)	
Extract Features: [1000/1101]	Time 0.135 (0.335)	Data 0.000 (0.199)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          79.8%
  top-5          92.7%
  top-10         95.7%
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.153 (0.319)	Data 0.018 (0.185)	
Extract Features: [1000/1083]	Time 0.135 (0.307)	Data 0.000 (0.173)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-0][200/1000]	Time 0.370 (0.499)	Data 0.030 (0.157)	Loss_hard 0.372 (0.310)	Loss_soft 4.195 (4.344)
Epoch: [4-0][400/1000]	Time 0.376 (0.443)	Data 0.035 (0.102)	Loss_hard 0.454 (0.318)	Loss_soft 4.468 (4.451)
Epoch: [4-0][600/1000]	Time 0.374 (0.422)	Data 0.033 (0.080)	Loss_hard 0.441 (0.334)	Loss_soft 4.514 (4.479)
Epoch: [4-0][800/1000]	Time 0.376 (0.410)	Data 0.035 (0.069)	Loss_hard 0.377 (0.325)	Loss_soft 4.638 (4.502)
Epoch: [4-0][1000/1000]	Time 0.360 (0.403)	Data 0.019 (0.062)	Loss_hard 0.074 (0.317)	Loss_soft 4.838 (4.513)
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.130 (0.158)	Data 0.000 (0.027)	
Extract Features: [1000/1083]	Time 0.130 (0.162)	Data 0.000 (0.032)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-1][200/1000]	Time 0.482 (0.627)	Data 0.155 (0.301)	Loss_hard 0.008 (0.335)	Loss_soft 3.790 (4.517)
Epoch: [4-1][400/1000]	Time 0.408 (0.541)	Data 0.082 (0.214)	Loss_hard 0.068 (0.345)	Loss_soft 4.427 (4.537)
Epoch: [4-1][600/1000]	Time 0.361 (0.495)	Data 0.035 (0.168)	Loss_hard 0.169 (0.342)	Loss_soft 4.713 (4.563)
Epoch: [4-1][800/1000]	Time 0.370 (0.463)	Data 0.042 (0.136)	Loss_hard 1.056 (0.337)	Loss_soft 4.690 (4.591)
Epoch: [4-1][1000/1000]	Time 0.346 (0.443)	Data 0.019 (0.116)	Loss_hard 0.113 (0.328)	Loss_soft 4.223 (4.589)
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.131 (0.157)	Data 0.000 (0.027)	
Extract Features: [1000/1083]	Time 0.130 (0.195)	Data 0.000 (0.065)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-2][200/1000]	Time 0.362 (0.406)	Data 0.035 (0.079)	Loss_hard 0.146 (0.275)	Loss_soft 4.684 (4.538)
Epoch: [4-2][400/1000]	Time 0.364 (0.385)	Data 0.037 (0.058)	Loss_hard 0.121 (0.267)	Loss_soft 4.493 (4.540)
Epoch: [4-2][600/1000]	Time 0.364 (0.377)	Data 0.037 (0.050)	Loss_hard 1.047 (0.266)	Loss_soft 4.773 (4.575)
Epoch: [4-2][800/1000]	Time 0.368 (0.374)	Data 0.041 (0.047)	Loss_hard 0.026 (0.263)	Loss_soft 4.708 (4.587)
Epoch: [4-2][1000/1000]	Time 0.346 (0.371)	Data 0.019 (0.044)	Loss_hard 0.221 (0.272)	Loss_soft 5.073 (4.593)
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.131 (0.144)	Data 0.000 (0.014)	
Extract Features: [1000/1083]	Time 0.305 (0.186)	Data 0.175 (0.056)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-3][200/1000]	Time 0.359 (0.380)	Data 0.031 (0.053)	Loss_hard 0.514 (0.232)	Loss_soft 4.622 (4.575)
Epoch: [4-3][400/1000]	Time 0.363 (0.371)	Data 0.036 (0.044)	Loss_hard 0.192 (0.222)	Loss_soft 4.692 (4.621)
Epoch: [4-3][600/1000]	Time 0.361 (0.368)	Data 0.034 (0.041)	Loss_hard 1.010 (0.213)	Loss_soft 4.512 (4.643)
Epoch: [4-3][800/1000]	Time 0.357 (0.367)	Data 0.029 (0.040)	Loss_hard 0.074 (0.215)	Loss_soft 4.713 (4.667)
Epoch: [4-3][1000/1000]	Time 0.346 (0.366)	Data 0.019 (0.039)	Loss_hard 0.024 (0.215)	Loss_soft 4.480 (4.670)
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.131 (0.141)	Data 0.000 (0.011)	
Extract Features: [1000/1083]	Time 0.130 (0.182)	Data 0.000 (0.052)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-4][200/1000]	Time 0.376 (0.398)	Data 0.047 (0.071)	Loss_hard 0.076 (0.241)	Loss_soft 4.628 (4.681)
Epoch: [4-4][400/1000]	Time 0.359 (0.380)	Data 0.031 (0.053)	Loss_hard 0.297 (0.238)	Loss_soft 4.590 (4.709)
Epoch: [4-4][600/1000]	Time 0.359 (0.374)	Data 0.032 (0.047)	Loss_hard 0.161 (0.225)	Loss_soft 4.530 (4.686)
Epoch: [4-4][800/1000]	Time 0.362 (0.371)	Data 0.036 (0.044)	Loss_hard 0.127 (0.215)	Loss_soft 4.575 (4.714)
Epoch: [4-4][1000/1000]	Time 0.346 (0.369)	Data 0.019 (0.042)	Loss_hard 0.068 (0.210)	Loss_soft 4.926 (4.740)
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.130 (0.137)	Data 0.000 (0.007)	
Extract Features: [1000/1083]	Time 0.130 (0.173)	Data 0.000 (0.043)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-5][200/1000]	Time 0.356 (0.376)	Data 0.028 (0.048)	Loss_hard 0.264 (0.195)	Loss_soft 5.260 (4.771)
Epoch: [4-5][400/1000]	Time 0.360 (0.369)	Data 0.032 (0.042)	Loss_hard 0.427 (0.193)	Loss_soft 4.451 (4.804)
Epoch: [4-5][600/1000]	Time 0.359 (0.367)	Data 0.032 (0.040)	Loss_hard 0.855 (0.194)	Loss_soft 4.947 (4.822)
Epoch: [4-5][800/1000]	Time 0.360 (0.366)	Data 0.032 (0.038)	Loss_hard 0.082 (0.194)	Loss_soft 4.935 (4.807)
Epoch: [4-5][1000/1000]	Time 0.348 (0.366)	Data 0.020 (0.038)	Loss_hard 0.431 (0.194)	Loss_soft 4.784 (4.798)
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.130 (0.134)	Data 0.000 (0.004)	
Extract Features: [1000/1083]	Time 0.130 (0.132)	Data 0.000 (0.002)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-6][200/1000]	Time 0.358 (0.375)	Data 0.030 (0.048)	Loss_hard 0.185 (0.222)	Loss_soft 4.732 (4.748)
Epoch: [4-6][400/1000]	Time 0.364 (0.369)	Data 0.037 (0.042)	Loss_hard 0.060 (0.201)	Loss_soft 5.129 (4.744)
Epoch: [4-6][600/1000]	Time 0.369 (0.367)	Data 0.042 (0.039)	Loss_hard 0.126 (0.206)	Loss_soft 4.884 (4.726)
Epoch: [4-6][800/1000]	Time 0.358 (0.365)	Data 0.032 (0.038)	Loss_hard 0.087 (0.214)	Loss_soft 4.954 (4.725)
Epoch: [4-6][1000/1000]	Time 0.346 (0.365)	Data 0.020 (0.038)	Loss_hard 0.190 (0.214)	Loss_soft 4.626 (4.713)
===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.130 (0.133)	Data 0.000 (0.003)	
Extract Features: [1000/1083]	Time 0.130 (0.132)	Data 0.000 (0.002)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [4-7][200/320]	Time 0.359 (0.377)	Data 0.032 (0.050)	Loss_hard 0.040 (0.222)	Loss_soft 4.406 (4.670)
Extract Features: [500/1101]	Time 0.286 (0.364)	Data 0.157 (0.235)	
Extract Features: [1000/1101]	Time 0.541 (0.348)	Data 0.411 (0.218)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          83.3%
  top-5          93.2%
  top-10         95.7%

 * Finished generation   0 epoch   4 recall@1: 83.3%  recall@5: 93.2%  recall@10: 95.7%  best@5: 93.2% *

===> Start extracting features for sorting gallery
Extract Features: [500/1083]	Time 0.216 (0.184)	Data 0.086 (0.055)	
Extract Features: [1000/1083]	Time 0.130 (0.171)	Data 0.000 (0.040)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating pairwise distances
===> Start calculating pairwise distances
