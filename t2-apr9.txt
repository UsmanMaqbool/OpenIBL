Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='250k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/media/leo/2C737A9872F69ECF/models/graphnetvlad/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-09-Apr-0207/checkpoint2.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, data_dir='/mnt/ssd/usman_ws/OpenIBL/examples/data', logs_dir='/mnt/ssd/usman_ws/OpenIBL/examples/logs', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
Encoder loaded!
=> Loaded checkpoint '/media/leo/2C737A9872F69ECF/models/graphnetvlad/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-09-Apr-0207/checkpoint2.pth.tar'
=> Start epoch 2  best recall5 95.6%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.048 (0.090)	Data 0.000 (0.010)	
Extract Features: [200/315]	Time 0.048 (0.069)	Data 0.000 (0.005)	
Extract Features: [300/315]	Time 0.063 (0.066)	Data 0.000 (0.003)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 1.888 (1.181)	Data 1.196 (0.439)	
Extract Features: [200/2375]	Time 1.075 (1.153)	Data 0.369 (0.429)	
Extract Features: [300/2375]	Time 1.496 (1.130)	Data 0.806 (0.411)	
Extract Features: [400/2375]	Time 1.419 (1.141)	Data 0.716 (0.423)	
Extract Features: [500/2375]	Time 0.995 (1.141)	Data 0.290 (0.424)	
Extract Features: [600/2375]	Time 1.616 (1.138)	Data 0.929 (0.422)	
Extract Features: [700/2375]	Time 1.211 (1.133)	Data 0.497 (0.418)	
Extract Features: [800/2375]	Time 1.138 (1.133)	Data 0.434 (0.418)	
Extract Features: [900/2375]	Time 1.828 (1.135)	Data 1.168 (0.422)	
Extract Features: [1000/2375]	Time 1.623 (1.133)	Data 0.964 (0.423)	
Extract Features: [1100/2375]	Time 1.876 (1.133)	Data 1.204 (0.426)	
Extract Features: [1200/2375]	Time 1.523 (1.136)	Data 0.854 (0.431)	
Extract Features: [1300/2375]	Time 1.172 (1.134)	Data 0.486 (0.430)	
Extract Features: [1400/2375]	Time 1.764 (1.136)	Data 1.090 (0.434)	
Extract Features: [1500/2375]	Time 1.795 (1.137)	Data 1.122 (0.437)	
Extract Features: [1600/2375]	Time 2.128 (1.138)	Data 1.457 (0.439)	
Extract Features: [1700/2375]	Time 1.498 (1.140)	Data 0.824 (0.442)	
Extract Features: [1800/2375]	Time 2.034 (1.140)	Data 1.358 (0.443)	
Extract Features: [1900/2375]	Time 1.820 (1.142)	Data 1.148 (0.446)	
Extract Features: [2000/2375]	Time 1.671 (1.141)	Data 0.992 (0.445)	
Extract Features: [2100/2375]	Time 1.512 (1.141)	Data 0.834 (0.446)	
Extract Features: [2200/2375]	Time 1.900 (1.142)	Data 1.232 (0.448)	
Extract Features: [2300/2375]	Time 2.087 (1.141)	Data 1.422 (0.447)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          80.0%
  top-5          87.3%
  top-10         89.8%
