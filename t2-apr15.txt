Use GPU: 0 for testing, rank no.0 of world_size 1
==========
Args:Namespace(launcher='pytorch', tcp_port='5017', dataset='tokyo', scale='250k', test_batch_size=32, workers=2, height=480, width=640, num_clusters=64, arch='vgg16', nowhiten=False, sync_gather=False, features=4096, resume='/media/leo/2C737A9872F69ECF/models/graphnetvlad/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-15-Apr-0019/checkpoint2.pth.tar', vlad=True, reduction=True, rerank=False, rr_topk=25, lambda_value=0, print_freq=10, data_dir='/mnt/ssd/usman_ws/OpenIBL/examples/data', logs_dir='/mnt/ssd/usman_ws/OpenIBL/examples/logs', rank=0, ngpus_per_node=1, gpu=0, world_size=1)
==========
Tokyo dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |  4035  |    48420
  train_gallery |  4092  |    49104
  val_query     |  1308  |    15696
  val_gallery   |  2780  |    33360
  test_query    |    35  |      315
  test_gallery  |  6254  |    75984
Encoder loaded!
=> Loaded checkpoint '/media/leo/2C737A9872F69ECF/models/graphnetvlad/pitts30k-vgg16/conv5-sare_joint-lr0.0001-tuple1-15-Apr-0019/checkpoint2.pth.tar'
=> Start epoch 2  best recall5 94.0%
Evaluate on the test set:
load PCA parameters...
Extract Features: [100/315]	Time 0.048 (0.095)	Data 0.000 (0.011)	
Extract Features: [200/315]	Time 0.047 (0.073)	Data 0.000 (0.006)	
Extract Features: [300/315]	Time 0.057 (0.069)	Data 0.000 (0.004)	
gathering features from rank no.0
load PCA parameters...
Extract Features: [100/2375]	Time 1.398 (1.155)	Data 0.702 (0.424)	
Extract Features: [200/2375]	Time 0.925 (1.136)	Data 0.216 (0.418)	
Extract Features: [300/2375]	Time 1.062 (1.114)	Data 0.361 (0.399)	
Extract Features: [400/2375]	Time 1.430 (1.126)	Data 0.736 (0.415)	
Extract Features: [500/2375]	Time 0.854 (1.126)	Data 0.139 (0.416)	
Extract Features: [600/2375]	Time 1.173 (1.123)	Data 0.473 (0.414)	
Extract Features: [700/2375]	Time 1.103 (1.120)	Data 0.399 (0.410)	
Extract Features: [800/2375]	Time 0.904 (1.119)	Data 0.212 (0.410)	
Extract Features: [900/2375]	Time 1.485 (1.120)	Data 0.793 (0.411)	
Extract Features: [1000/2375]	Time 1.102 (1.116)	Data 0.393 (0.407)	
Extract Features: [1100/2375]	Time 1.110 (1.117)	Data 0.402 (0.408)	
Extract Features: [1200/2375]	Time 1.243 (1.121)	Data 0.539 (0.413)	
Extract Features: [1300/2375]	Time 1.023 (1.118)	Data 0.307 (0.409)	
Extract Features: [1400/2375]	Time 1.625 (1.120)	Data 0.927 (0.411)	
Extract Features: [1500/2375]	Time 1.482 (1.121)	Data 0.790 (0.412)	
Extract Features: [1600/2375]	Time 1.838 (1.121)	Data 1.145 (0.412)	
Extract Features: [1700/2375]	Time 0.972 (1.122)	Data 0.262 (0.413)	
Extract Features: [1800/2375]	Time 1.497 (1.122)	Data 0.803 (0.413)	
Extract Features: [1900/2375]	Time 1.522 (1.125)	Data 0.847 (0.416)	
Extract Features: [2000/2375]	Time 1.592 (1.123)	Data 0.900 (0.415)	
Extract Features: [2100/2375]	Time 0.877 (1.123)	Data 0.178 (0.415)	
Extract Features: [2200/2375]	Time 1.361 (1.124)	Data 0.661 (0.416)	
Extract Features: [2300/2375]	Time 1.313 (1.123)	Data 0.615 (0.415)	
gathering features from rank no.0
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          80.3%
  top-5          89.8%
  top-10         91.4%
