/home/leo/usman_ws/models/openibl/fastscnn_v4_16Aug/vgg16-graphvlad-triplet-pitts30k-lr0.001-tuple1-19-Aug
==========Starting Training=============
========================================
/home/leo/anaconda3/envs/openibl/lib/python3.8/site-packages/torch/distributed/launch.py:180: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use_env is set by default in torchrun.
If your script expects `--local_rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  warnings.warn(
Use GPU: 0 for training, rank no.0 of world_size 1
==========
Args:Namespace(arch='vgg16', cache_size=1000, data_dir='/home/leo/usman_ws/codes/OpenIBL/examples/data/', dataset='pitts', deterministic=False, epochs=5, eval_step=1, fast_scnn='/home/leo/usman_ws/datasets/official/fast-scnn/fast_scnn_citys.pth', features=4096, gpu=0, height=480, init_dir='/home/leo/usman_ws/datasets/official/openibl-init', iters=0, launcher='pytorch', layers='conv5', logs_dir='/home/leo/usman_ws/models/openibl/fastscnn_v4_16Aug/vgg16-graphvlad-triplet-pitts30k-lr0.001-tuple1-19-Aug', loss_type='triplet', lr=0.001, margin=0.1, method='graphvlad', momentum=0.9, neg_num=10, neg_pool=1000, ngpus_per_node=1, nowhiten=False, num_clusters=64, print_freq=200, rank=0, rerank=False, resume='', scale='30k', seed=43, step_size=5, sync_gather=True, syncbn=True, tcp_port='6010', test_batch_size=32, tuple_size=1, vlad=True, weight_decay=0.001, width=640, workers=1, world_size=1)
==========
Pittsburgh dataset loaded
  subset        | # pids | # images
  ---------------------------------
  train_query   |   311  |     7320
  train_gallery |   417  |    10000
  val_query     |   319  |     7608
  val_gallery   |   417  |    10000
  test_query    |   286  |     6816
  test_gallery  |   417  |    10000
/home/leo/anaconda3/envs/openibl/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/leo/anaconda3/envs/openibl/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
No. of Clusters:  64
Loading centroids from /home/leo/usman_ws/datasets/official/openibl-init/vgg16_pitts_64_desc_cen.hdf5
===> Loading segmentation model
Test the initial model:
Extract Features: [100/551]	Time 0.439 (0.454)	Data 0.000 (0.011)	
Extract Features: [200/551]	Time 0.444 (0.448)	Data 0.000 (0.005)	
Extract Features: [300/551]	Time 0.413 (0.441)	Data 0.000 (0.004)	
Extract Features: [400/551]	Time 0.418 (0.436)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.429 (0.434)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          80.2%
  top-5          92.8%
  top-10         95.6%
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.431 (0.437)	Data 0.000 (0.011)	
Extract Features: [200/542]	Time 0.443 (0.436)	Data 0.000 (0.006)	
Extract Features: [300/542]	Time 0.442 (0.434)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.434 (0.434)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.438 (0.434)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-0][200/1000]	Time 0.341 (0.337)	Data 0.022 (0.019)	Loss 0.038 (0.094)
Epoch: [0-0][400/1000]	Time 0.330 (0.333)	Data 0.013 (0.016)	Loss 0.020 (0.094)
Epoch: [0-0][600/1000]	Time 0.329 (0.332)	Data 0.016 (0.015)	Loss 0.188 (0.092)
Epoch: [0-0][800/1000]	Time 0.333 (0.331)	Data 0.014 (0.014)	Loss 0.040 (0.088)
Epoch: [0-0][1000/1000]	Time 0.315 (0.330)	Data 0.005 (0.014)	Loss 0.000 (0.083)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.412 (0.422)	Data 0.000 (0.011)	
Extract Features: [200/542]	Time 0.412 (0.415)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.414 (0.417)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.401 (0.417)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.427 (0.419)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-1][200/1000]	Time 0.357 (0.339)	Data 0.013 (0.018)	Loss 0.000 (0.082)
Epoch: [0-1][400/1000]	Time 0.328 (0.334)	Data 0.010 (0.015)	Loss 0.063 (0.076)
Epoch: [0-1][600/1000]	Time 0.337 (0.332)	Data 0.012 (0.014)	Loss 0.009 (0.071)
Epoch: [0-1][800/1000]	Time 0.349 (0.334)	Data 0.011 (0.013)	Loss 0.000 (0.072)
Epoch: [0-1][1000/1000]	Time 0.337 (0.335)	Data 0.005 (0.013)	Loss 0.000 (0.071)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.446 (0.436)	Data 0.000 (0.011)	
Extract Features: [200/542]	Time 0.422 (0.431)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.428 (0.430)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.421 (0.429)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.411 (0.428)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-2][200/1000]	Time 0.352 (0.346)	Data 0.010 (0.018)	Loss 0.010 (0.062)
Epoch: [0-2][400/1000]	Time 0.344 (0.344)	Data 0.011 (0.015)	Loss 0.262 (0.065)
Epoch: [0-2][600/1000]	Time 0.335 (0.342)	Data 0.011 (0.014)	Loss 0.000 (0.063)
Epoch: [0-2][800/1000]	Time 0.336 (0.342)	Data 0.014 (0.013)	Loss 0.031 (0.061)
Epoch: [0-2][1000/1000]	Time 0.341 (0.343)	Data 0.005 (0.013)	Loss 0.014 (0.059)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.446 (0.451)	Data 0.000 (0.011)	
Extract Features: [200/542]	Time 0.419 (0.439)	Data 0.000 (0.006)	
Extract Features: [300/542]	Time 0.456 (0.438)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.435 (0.435)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.406 (0.435)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-3][200/1000]	Time 0.319 (0.332)	Data 0.012 (0.018)	Loss 0.000 (0.057)
Epoch: [0-3][400/1000]	Time 0.340 (0.331)	Data 0.011 (0.015)	Loss 0.018 (0.060)
Epoch: [0-3][600/1000]	Time 0.330 (0.331)	Data 0.010 (0.014)	Loss 0.000 (0.060)
Epoch: [0-3][800/1000]	Time 0.350 (0.332)	Data 0.011 (0.013)	Loss 0.014 (0.055)
Epoch: [0-3][1000/1000]	Time 0.310 (0.332)	Data 0.005 (0.013)	Loss 0.000 (0.053)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.427 (0.430)	Data 0.000 (0.011)	
Extract Features: [200/542]	Time 0.407 (0.426)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.412 (0.425)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.436 (0.421)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.435 (0.422)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-4][200/1000]	Time 0.329 (0.332)	Data 0.011 (0.018)	Loss 0.000 (0.055)
Epoch: [0-4][400/1000]	Time 0.341 (0.334)	Data 0.010 (0.015)	Loss 0.000 (0.050)
Epoch: [0-4][600/1000]	Time 0.318 (0.334)	Data 0.014 (0.014)	Loss 0.014 (0.047)
Epoch: [0-4][800/1000]	Time 0.315 (0.331)	Data 0.010 (0.013)	Loss 0.008 (0.047)
Epoch: [0-4][1000/1000]	Time 0.331 (0.330)	Data 0.005 (0.013)	Loss 0.023 (0.045)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.402 (0.418)	Data 0.000 (0.012)	
Extract Features: [200/542]	Time 0.414 (0.413)	Data 0.000 (0.006)	
Extract Features: [300/542]	Time 0.415 (0.411)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.405 (0.411)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.414 (0.410)	Data 0.000 (0.003)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-5][200/1000]	Time 0.331 (0.337)	Data 0.010 (0.018)	Loss 0.088 (0.042)
Epoch: [0-5][400/1000]	Time 0.330 (0.335)	Data 0.012 (0.015)	Loss 0.064 (0.042)
Epoch: [0-5][600/1000]	Time 0.325 (0.331)	Data 0.015 (0.014)	Loss 0.000 (0.042)
Epoch: [0-5][800/1000]	Time 0.334 (0.331)	Data 0.010 (0.013)	Loss 0.235 (0.041)
Epoch: [0-5][1000/1000]	Time 0.327 (0.332)	Data 0.005 (0.013)	Loss 0.062 (0.042)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.417 (0.436)	Data 0.000 (0.011)	
Extract Features: [200/542]	Time 0.422 (0.430)	Data 0.000 (0.005)	
Extract Features: [300/542]	Time 0.437 (0.429)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.423 (0.429)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.442 (0.429)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-6][200/1000]	Time 0.327 (0.340)	Data 0.011 (0.018)	Loss 0.172 (0.035)
Epoch: [0-6][400/1000]	Time 0.331 (0.335)	Data 0.011 (0.015)	Loss 0.000 (0.036)
Epoch: [0-6][600/1000]	Time 0.337 (0.337)	Data 0.011 (0.014)	Loss 0.000 (0.039)
Epoch: [0-6][800/1000]	Time 0.337 (0.337)	Data 0.011 (0.013)	Loss 0.041 (0.040)
Epoch: [0-6][1000/1000]	Time 0.320 (0.338)	Data 0.005 (0.013)	Loss 0.000 (0.039)
===> Start extracting features for sorting gallery
Extract Features: [100/542]	Time 0.413 (0.423)	Data 0.000 (0.011)	
Extract Features: [200/542]	Time 0.408 (0.419)	Data 0.000 (0.006)	
Extract Features: [300/542]	Time 0.439 (0.424)	Data 0.000 (0.004)	
Extract Features: [400/542]	Time 0.428 (0.427)	Data 0.000 (0.003)	
Extract Features: [500/542]	Time 0.435 (0.428)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start sorting gallery
Epoch: [0-7][200/320]	Time 0.336 (0.354)	Data 0.012 (0.018)	Loss 0.024 (0.037)
Extract Features: [100/551]	Time 0.401 (0.432)	Data 0.000 (0.011)	
Extract Features: [200/551]	Time 0.449 (0.434)	Data 0.000 (0.006)	
Extract Features: [300/551]	Time 0.430 (0.429)	Data 0.000 (0.004)	
Extract Features: [400/551]	Time 0.431 (0.428)	Data 0.000 (0.003)	
Extract Features: [500/551]	Time 0.423 (0.426)	Data 0.000 (0.002)	
===> Start calculating pairwise distances
===> Start calculating recalls
Recall Scores:
  top-1          86.1%
  top-5          94.3%
  top-10         96.5%

 * Finished epoch   0 recall@1: 86.1%  recall@5: 94.3%  recall@10: 96.5%  best@5: 94.3% *